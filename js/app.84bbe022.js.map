{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/TopicForm.vue?2fe2","webpack:///./src/components/TopicForm.vue?87a5","webpack:///./src/App.vue?bd3f","webpack:///./src/components/ScrollingContent.vue?3b76","webpack:///./src/components/ClosablePanel.vue?53df","webpack:///./src/App.vue","webpack:///./src/types.ts","webpack:///./src/dexieDatabase.ts","webpack:///./src/state.ts","webpack:///./src/components/TopicForm.vue","webpack:///./src/utils.ts","webpack:///./src/twitch-api.handler.ts","webpack:///./src/twitch-api.offline.ts","webpack:///./src/twitch-instance.ts","webpack:///./src/components/ScrollingContent.vue","webpack:///./src/components/ScrollingContent.vue?9c83","webpack:///./src/components/ScrollingContent.vue?02a8","webpack:///./src/components/TopicForm.vue?888a","webpack:///./src/components/TopicForm.vue?7781","webpack:///./src/components/ClosablePanel.vue","webpack:///./src/components/ClosablePanel.vue?7054","webpack:///./src/components/TopicEntry.vue","webpack:///./src/components/TopicEntry.vue?c7d4","webpack:///./src/components/TopicEntry.vue?3a35","webpack:///./src/components/HistoryList.vue","webpack:///./src/components/HistoryList.vue?2343","webpack:///./src/components/HistoryList.vue?1419","webpack:///./src/components/Options.vue","webpack:///./src/components/Options.vue?181a","webpack:///./src/components/Options.vue?4169","webpack:///./src/components/Modal.vue","webpack:///./src/components/Modal.vue?3fe0","webpack:///./src/components/Modal.vue?ee95","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?eabf","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","authRedirectMode","href","target","rel","startAnimate","type","showNewForm","showHistory","showOptions","loggedIn","getToken","logout","userName","currentTopics","topic","id","showEditForm","$event","deleteTopic","increaseCounter","setupTwitch","archivedTopics","unArchiveTopic","title","currentCounter","opened","onAddNew","formForTopic","undefined","editTopic","COMMAND_SYNTAX_NAME","COMMAND_SYNTAX_CONTENT","CONFIG_COMMAND_SYNTAX","CONFIG_STATE","localStorage","getItem","INITIAL_TOPIC_OBJECT","template","notificationText","tags","commands","commandsJson","customChannel","archived","INITIAL_HISTORY_OBJECT","task","lastCounter","topicId","lastTitle","db","version","stores","topics","history","store","state","setLoggedIn","this","loadDataFromDb","toArray","then","allTopics","JSON","parse","allEntries","tagEntry","addTopic","realTopic","assign","stringify","importTagsAndUpdateTagIdList","console","info","add","indexOfTopic","indexOf","delete","findIndex","update","addHistoryEntry","entry","entryWithDefaults","date","Date","importTags","importUnknownTags","map","join","tagsImported","tag","realTag","for","workingTopic","required","autocomplete","disabled","includes","counterPlaceholder","isTemplateInvalid","notValidTemplateExplanation","generatedTitle","element-id","ref","currentTags","updateTags","only-existing-tags","id-field","text-field","existing-tags","allTags","typeahead","placeholder","typeahead-activation-threshold","typeahead-max-results","selected-tag","index","removeTag","addCommand","command","removeCommand","content","gameName","importFromTwitch","archiveTopic","cancel","save","replace","generateNotification","generateCommandText","commandToSend","convertTwitchTagsToTagData","filter","is_auto","tag_id","localization_names","LS_USER_ID","LS_USER_NAME","LS_TOKEN_ID","LS_ACCESS_TOKEN","clientId","scopes","redirectUrl","tmi","twitchAuthUrl","encodeURIComponent","Promise","resolve","reject","userId","tokenId","accessToken","open","gotToken","setItem","fetch","headers","Authorization","res","json","js","location","hashValues","hash","params","URLSearchParams","jwt","preferred_username","sub","setTimeout","opener","close","username","broadcaster_id","newTagsPayload","tag_ids","split","getChannelInfoByUserName","method","body","channelInformationPayload","game_id","gameId","broadcaster_language","identity","password","connection","secure","reconnect","connect","say","after","first","message","status","game_name","alert","Error","currentUrl","queryParams","search","twitch","has","$refs","simplebar","autoHide","components","render","ScrollingContent","TagsInput","props","Boolean","computed","values","generatedNotification","titleLength","isNotificationInvalid","notValidNotificationExplanation","methods","$emit","currentChannelInformation","channelInfo","importedTags","updateTagsFromTopic","test","updateTagsToTopic","tagsValue","tagsInput","watch","val","mounted","__scopeId","generateTitle","tagName","lastAppliedLabel","foundEntriesInHistory","h","sort","a","b","Number","latestEntry","toLocaleString","sortedHistory","newArray","aDate","toString","bDate","commandSyntax","currentlyImportingTags","isLoggedIn","importTwitchTags","lastCursor","listFirstTags","importableTags","newTags","pagination","cursor","isOpened","closeModal","default","ClosablePanel","newOpenedValue","wait","ms","hashParams","checkTokens","loginExists","loginResult","resetAuth","confirm","applyTopicToTwitch","writeToChat","login","Modal","TopicForm","TopicEntry","HistoryList","Options","ready","log","registered","cached","updatefound","updated","offline","error","use","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,wDCvJT,W,sHCAA,W,oCCAA,W,oCCAA,W,kFCAA,W,+ICcOyC,MAAM,e,GACJA,MAAM,U,GACJA,MAAM,qB,GACJA,MAAM,+C,EACT,eAAkC,KAA/BA,MAAM,SAAQ,iBAAa,G,GAuBzBA,MAAM,2B,GAEJA,MAAM,oC,GAcNA,MAAM,mB,EAYnB,eAEM,OAFDA,MAAM,UAAQ,S,EAUnB,eAAqC,KAAlCA,MAAM,SAAQ,oBAAgB,G,EAKjC,eAA8B,KAA3BA,MAAM,SAAQ,aAAS,G,aAYrBA,MAAM,S,+NA/FF,EAAAC,kB,iBAAX,eAEM,QAFuB,0E,iBAI7B,eAoGI,SAlGD,eAKS,KALND,MAAM,cACNE,KAAK,6CAA6CC,OAAO,SAASC,IAAI,WACrE,YAAS,+BAAE,EAAAC,cAAY,IACvB,WAAQ,+BAAE,EAAAA,cAAY,K,CACnB,eAAkE,KAA/DL,MAAK,CAAC,cAAsB,EAAAK,aAAY,e,aAGrD,eA0DM,MA1DN,EA0DM,CAzDJ,eAqDM,MArDN,EAqDM,CApDJ,eAmDM,MAnDN,EAmDM,CAlDJ,eAsBM,MAtBN,EAsBM,CArBJ,EAEA,eAkBM,YAjBN,eAES,UAFDC,KAAK,SAASN,MAAM,qBAAsB,QAAK,+BAAE,EAAAO,aAAe,EAAAA,eAAa,mBAGrF,eAES,UAFDD,KAAK,SAASN,MAAM,qBAAsB,QAAK,+BAAE,EAAAQ,aAAe,EAAAA,eAAa,oBAInF,eAES,UAFDF,KAAK,SAASN,MAAM,qBAAsB,QAAK,+BAAE,EAAAS,aAAe,EAAAA,eAAa,oBAMxE,EAAAC,S,wCAFf,eAE6C,U,MAFpC,QAAK,+BAAE,EAAAC,aACRX,MAAM,sBACW,gBAGX,EAAAU,U,iBAFd,eAEqD,U,MAF5C,QAAK,+BAAE,EAAAE,WACRZ,MAAM,oBACU,WAAQ,eAAE,EAAAa,UAAQ,I,0BAG5C,eA0BoB,GA1BDb,MAAM,2BAAyB,C,wBAChD,iBAwBM,CAxBN,eAwBM,MAxBN,EAwBM,E,mBAvBJ,eAaI,2BAbmB,EAAAc,eAAa,SAAvBC,G,wBAAb,eAaI,OAbmCzB,IAAKyB,EAAMC,GAAIhB,MAAM,mB,CAC5D,eAWM,MAXN,EAWM,CAVJ,eASM,YARR,eAOc,GAPAe,MAAOA,EACPL,SAAU,EAAAA,SACV,eAAc,+BAAE,EAAAO,aAAaC,KAC7B,cAAY,+BAAE,EAAAC,YAAYD,KAC1B,kBAAgB,iCAAE,EAAAE,gBAAgBF,KAClC,cAAY,iCAAE,EAAAG,YAAYH,M,4CAOxC,eAOM,MAPN,EAOM,E,mBANN,eAKO,2BALiB,EAAAI,gBAAc,SAAxBP,G,wBAAd,eAKO,QALkCzB,IAAKyB,EAAMC,GAAIhB,MAAM,mB,CAC5D,eAGS,UAHA,QAAK,mBAAE,EAAAuB,eAAeR,IACvBf,MAAM,oBAAmB,eACpB,eAAEe,EAAMS,OAAO,KAAE,eAAET,EAAMU,gBAAgB,KACtD,oB,wBAOV,IAKF,eAEQ,GAFOC,OAAQ,EAAAjB,Y,mDAAA,EAAAA,YAAW,K,yBAChC,iBAAiD,CAAjD,eAAiD,GAAvC,SAAM,iCAAE,EAAAA,aAAW,U,mBAG/B,eAGQ,GAHOiB,OAAQ,EAAAlB,Y,mDAAA,EAAAA,YAAW,K,yBAChC,iBAAqC,CAArC,EACA,eAA6B,O,mBAG/B,eAOQ,GAPOkB,OAAQ,EAAAnB,Y,mDAAA,EAAAA,YAAW,K,yBAChC,iBAA8B,CAA9B,EAEA,eAGc,GAHD,OAAM,EAAAoB,SACN,SAAM,iCAAE,EAAApB,aAAW,IACnBG,SAAU,EAAAA,U,qDAIzB,eAYQ,GAZAgB,OAAoB,MAAZ,EAAAE,aACR,SAAM,iCAAE,EAAAA,kBAAeC,K,yBAE7B,iBAQM,CARK,EAAAD,c,iBAAX,eAQM,SAPJ,eAAuD,IAAvD,EAAiB,eAAY,eAAE,EAAAA,aAAaJ,OAAK,GAEjD,eAIc,GAJDT,MAAO,EAAAa,aACP,OAAM,EAAAE,UACN,SAAM,iCAAE,EAAAF,kBAAeC,IACvBnB,SAAU,EAAAA,U,6VCpGhBqB,EAAsB,SACtBC,EAAyB,YACzBC,EAAwB,gBAExBC,EAAe,kBACzBD,EADsB,UACEE,aAAaC,QAAQH,UADvB,+BAELF,EAFK,YAEkBC,IAmD9BK,EAA8B,CACzCZ,eAAgB,EAChBD,MAAO,GACPc,SAAU,GACVC,iBAAkB,GAClBC,KAAM,GACNC,SAAU,GACVC,aAAc,KACdC,cAAe,GAEfC,UAAU,GAGCC,EAAuC,CAClDC,KAAM,GACNC,YAAa,EACbC,SAAU,EACVC,UAAW,I,wBCxEA,EAAb,wDAKE,0CACE,cAAM,mBAEN,IAAMC,EAAK,kBAHb,OAQEA,EAAGC,QAAQ,GAAGC,OAAO,CACnBC,OAAQ,0GACRC,QAAS,mBACTd,KAAM,aAXV,EALF,UAAmC,QAqBtB,EAAK,IAAI,ECpBTe,EAAQ,CACnBC,MAAO,eAAgB,CACrBH,OAAQ,GACRC,QAAS,GACTd,KAAM,GACN9B,UAAU,IAGZ+C,YARmB,SAQN/C,GACXgD,KAAKF,MAAM9C,SAAWA,GAGxBiD,eAZmB,WAajB,EAAGN,OAAOO,UAAUC,MAAK,SAAAC,GAAY,uBACfA,GADe,IACnC,2BAA+B,OAApB/C,EAAoB,QAC7BA,EAAM0B,SAAWsB,KAAKC,MAAL,UAAWjD,EAAM2B,oBAAjB,QAAiC,OAFjB,8BAKnCa,EAAMC,MAAMH,OAASS,KAGvB,EAAGR,QAAQM,UAAUC,MAAK,SAAAI,GACxBV,EAAMC,MAAMF,QAAUW,KAGxB,EAAGzB,KAAKoB,UAAUC,MAAK,SAAAI,GAAa,uBACXA,GADW,IAClC,2BAAmC,KAAxBC,EAAwB,QACjCX,EAAMC,MAAMhB,KAAK0B,EAASlD,IAAMkD,GAFA,mCAOtCC,SAhCmB,SAgCThI,GACR,IAAMiI,EAAmBxH,OAAOyH,OAAO,GAAIhC,EAAsBlG,GAE3DsG,EAAW2B,EAAU3B,SAC3B2B,EAAU1B,aAAeqB,KAAKO,UAAUF,EAAU3B,iBAC3C2B,EAAU3B,SAEjBiB,KAAKa,6BAA6BH,GAElCV,KAAKF,MAAMH,OAAOpG,KAAKmH,GAEvBI,QAAQC,KAAK,yBACb,EAAGpB,OAAOqB,IAAIN,GAEdA,EAAU3B,SAAWA,GAGvBtB,YAjDmB,SAiDNhF,GACX,IAAMwI,EAAejB,KAAKF,MAAMH,OAAOuB,QAAQzI,IAEzB,IAAlBwI,GACFjB,KAAKF,MAAMH,OAAOxF,OAAO8G,EAAc,GAGzC,EAAGtB,OAAOwB,OAAO1I,EAAK6E,KAExBc,UA1DmB,SA0DRf,GACT,IAAM4D,EAAejB,KAAKF,MAAMH,OAAOyB,WAAU,SAAA7F,GAAC,OAAIA,EAAE+B,KAAOD,EAAMC,MAE/DoD,EAAmBxH,OAAOyH,OAAO,GAAItD,GAErC0B,EAAW2B,EAAU3B,SAC3B2B,EAAU1B,aAAeqB,KAAKO,UAAUF,EAAU3B,iBAC3C2B,EAAU3B,SAEjBiB,KAAKa,6BAA6BH,IAEZ,IAAlBO,IACFjB,KAAKF,MAAMH,OAAOsB,GAAgBP,EAElCI,QAAQC,KAAK,qBAAsBf,KAAKF,QAG1CgB,QAAQC,KAAK,4BACb,EAAGpB,OAAO0B,OAAOhE,EAAMC,GAAKoD,GAE5BA,EAAU3B,SAAWA,GAGvBuC,gBAjFmB,SAiFFC,GACf,IAAMC,EAAkCtI,OAAOyH,OAAO,CACpDc,KAAM,IAAIC,MACTvC,EAAwBoC,GAE3BvB,KAAKF,MAAMF,QAAQrG,KAAKiI,GACxB,EAAG5B,QAAQoB,IAAIQ,IAGjBX,6BA1FmB,SA0FWxD,GAGN,QAAlBA,EAAMsE,aACR3B,KAAK4B,kBAAkBvE,EAAMsE,YAG7BtE,EAAMyB,KAAN,oBAAazB,EAAMsE,kBAAnB,aAAa,EAAkBE,KAAI,SAAAtG,GAAC,OAAIA,EAAE+B,MAAIwE,KAAK,YAAnD,QAA2D,UAEpDzE,EAAMsE,aAIjBC,kBAvGmB,SAuGA9C,GACjB,IADgC,EAC5BiD,EAAe,EADa,iBAMdjD,GANc,IAMhC,2BAAwB,KAAbkD,EAAa,QACtB,IAAKhC,KAAKF,MAAMhB,KAAKkD,EAAI1E,IAAK,CAC5B0C,KAAKF,MAAMhB,KAAKkD,EAAI1E,IAAM0E,EAE1B,IAAMC,EAAmB/I,OAAOyH,OAAO,GAAIqB,GAE3ClB,QAAQC,KAAK,mBAAoBiB,GACjC,EAAGlD,KAAKkC,IAAIiB,GACZF,MAd4B,8BAkBhC,OAAOA,IAIXlC,EAAMI,iB,yHC/HG3D,MAAM,0B,GACJA,MAAM,U,GACJA,MAAM,a,EACT,eAAuC,SAAhC4F,IAAI,cAAa,WAAO,G,GAQ5B5F,MAAM,a,EAGP,eAA2B,YAArB,kBAAc,G,GAUnBA,MAAM,a,EACT,eAA0C,SAAnC4F,IAAI,iBAAgB,WAAO,G,GAM/B5F,MAAM,a,EACT,eAA+C,SAAxC4F,IAAI,eAAc,kBAAc,G,4BAKlC,oB,kBAAmD,qB,UAGlD5F,MAAM,qB,IAKTA,MAAM,a,GACT,eAAiC,aAA1B,sBAAkB,G,IACnBA,MAAM,uB,IAoBTA,MAAM,a,GACT,eAAmB,aAAZ,QAAI,G,IAuBVA,MAAM,U,IACNA,MAAM,a,kBACF,c,GAcL,eAAK,mB,GAQT,eAAI,mB,cAEF,eAAI,mB,GAC4B,eAAM,mB,GACtC,eAAI,mB,GAGN,eAAK,mB,GAST,eAAK,mB,8KApIL,eAkIoB,GAlIDA,MAAM,oBAAkB,C,WACzC,uBAgIM,CAhIN,eAgIM,MAhIN,EAgIM,CA/HJ,eAwFM,MAxFN,EAwFM,CAvFJ,eAOM,MAPN,EAOM,CANJ,E,eACA,eAIoC,SAJ7BM,KAAK,OAAOU,GAAG,aAAahB,MAAK,CAAC,YAAW,aACvB,EAAA6F,aAAarE,QAClCsE,UAAW,EAAAD,aAAarE,MACzBuE,aAAa,M,qDACJ,EAAAF,aAAarE,MAAK,K,+BAAlB,EAAAqE,aAAarE,WAG/B,eAWM,MAXN,EAWM,CAVJ,eAGQ,c,eAFN,eAA8E,SAAvElB,KAAK,WAAWN,MAAM,uB,qDAAgC,EAAA2C,cAAa,K,mBAAb,EAAAA,iBAC7D,IAEyC,EAAAA,c,iCAA3C,eAK4C,S,MALrCrC,KAAK,OAAON,MAAK,CAAC,YAAW,YACR,EAAA2C,gBAAkB,EAAAkD,aAAalD,cAAa,eAAkB,EAAAA,gBAClFmD,UAAW,EAAAD,aAAalD,cACxBqD,UAAW,EAAArD,cACZoD,aAAa,M,qDACJ,EAAAF,aAAalD,cAAa,K,2CAA1B,EAAAkD,aAAalD,iB,wBAG/B,eAKM,MALN,EAKM,CAJJ,E,eACA,eAE6C,SAFtCrC,KAAK,SAASU,GAAG,gBAAgBhB,MAAM,YACvC+F,aAAa,M,qDACJ,EAAAF,aAAapE,eAAc,K,mBAA3B,EAAAoE,aAAapE,oBAG/B,eAYM,MAZN,EAYM,CAXJ,E,eACA,eACqD,YAD3CT,GAAG,cAAchB,MAAM,e,qDACd,EAAA6F,aAAavD,SAAQ,K,mBAArB,EAAAuD,aAAavD,Y,UAEpB,EAAAuD,aAAavD,gB,OAAb,EAAuB2D,SAAQ,e,wCAA3C,eAEM,SADJ,eAA2E,U,GAAxD,eAAmC,2BAA3B,EAAAC,oBAAkB,G,QAGT,EAAAC,mB,iBAAtC,eAEO,OAFP,GAEO,eADF,EAAAC,6BAA2B,I,wBAIlC,eAMM,MANN,GAMM,CALJ,GACA,eAEK,OAFL,GAEK,eADF,EAAAC,eAAetG,MAAK,Y,sBAmBzB,eAoBM,MApBN,GAoBM,CAnBJ,GACA,eAiBa,GAjBDuG,aAAW,OAAOC,IAAI,YACrBvH,MAAO,EAAAwH,YACP,cAAY,+BAAE,EAAAC,WAAWvF,KACzBwF,sBAAoB,EACrBC,WAAS,KACTC,aAAW,OACVC,gBAAe,EAAAC,QACfC,WAAW,EACZC,YAAY,cACXC,iCAAgC,EAChCC,wBAAuB,I,CAEjBC,eAAY,GAC3B,gBAD+BzB,EAC/B,EAD+BA,IAAK0B,EACpC,EADoCA,MAAOC,EAC3C,EAD2CA,UAC3C,MADoD,C,8BAClD3B,EAAInH,MAAM,IACZ,kBAAkE,QAA5DyB,MAAM,YAAa,QAAK,mCAAUqH,EAAUD,KAAK,cAAG,IAAC,mB,sCAQnE,eAoCI,MApCJ,GAoCI,CAnCJ,eAqBM,MArBN,GAqBM,CApBJ,eAIQ,c,GADN,eAAoF,UAA5E9G,KAAK,SAASN,MAAM,UAAW,QAAK,+BAAE,EAAAsH,gBAAc,sB,mBAG9D,eAaM,2BAb0B,EAAAzB,aAAapD,UAAQ,SAAxC8E,EAASH,G,wBAAtB,eAaM,OAZA9H,IAAK8H,EACXpH,MAAM,gB,gBACJ,eAE8B,SAFvBM,KAAK,OAAON,MAAM,YAClB+F,aAAa,M,yCACJwB,EAAQhJ,KAAI,I,yCAAZgJ,EAAQhJ,QAExB,eAAuF,UAA/E+B,KAAK,SAASN,MAAM,mBAAoB,QAAK,mBAAE,EAAAwH,cAAcJ,KAAQ,IAAC,eAC9E,G,eAEA,eAC+C,YADrCpH,MAAM,e,yCACGuH,EAAQE,QAAO,I,yCAAfF,EAAQE,gB,QAK/B,GACW,EAAA5B,aAAa6B,UAAY,EAAA7B,aAAarD,M,iBAAjD,eAIM,UAHJ,G,eAAI,UACE,eAAE,EAAAqD,aAAa6B,UAAU,IAAC,MAChC,M,sBAGF,GACA,eAE+D,UAFvDpH,KAAK,SAASN,MAAK,CAAC,UAAS,eACL,EAAAU,SAAQ,eAAkB,EAAAA,WACjD,QAAK,+BAAE,EAAAiH,sBAAoB,qBAAkB,W,MAM1D,GAEgB,EAAA9B,aAAa7E,I,iBAA7B,eACgD,U,MADfV,KAAK,SAASN,MAAM,mBAC5C,QAAK,iCAAE,EAAA4H,kBAAgB,Y,sBAEhC,eAAgF,UAAxEtH,KAAK,SAASN,MAAM,mBAAoB,QAAK,iCAAE,EAAA6H,YAAU,UACjE,eAAmE,UAA3DvH,KAAK,SAASN,MAAM,UAAW,QAAK,iCAAE,EAAA8H,UAAQ,S,4DClIlD,SAAU,GAAe/G,GAC7B,OAAKA,GAAUA,EAAMuB,SAIdvB,EAAMuB,SAASyF,QAAQ,eAAvB,UAA0ChH,EAAMU,iBAH9C,GAML,SAAUuG,GAAsBjH,GACpC,OAAKA,GAAUA,EAAMwB,iBAIdxB,EAAMwB,iBAAiBwF,QAAQ,eAA/B,UAAkDhH,EAAMU,iBAHtD,GAML,SAAUwG,GAAqBV,GACnC,IAAMW,EAAgBhG,EAAaD,GAChC8F,QAAQhG,EAAqBwF,EAAQhJ,MACrCwJ,QAAQ/F,EAAwBuF,EAAQE,SAE3C,OAAOS,EAGH,SAAUC,GAA4B3F,GAC1C,OAAOA,EACJ4F,QAAO,SAACnJ,GAAD,OAAQA,EAAEoJ,WACjB9C,KAAI,SAACtG,GAAD,MAAQ,CACX+B,GAAI/B,EAAEqJ,OACN/J,KAAMU,EAAEsJ,mBAAmB,a,8BC3B3BC,GAAa,SACbC,GAAe,WACfC,GAAc,UACdC,GAAkB,cAIX,GAAb,WAIE,WAAqBC,EACDC,EACAC,GAAmB,uBAFlB,KAAAF,WACD,KAAAC,SACA,KAAAC,cAJZ,KAAAC,IAAyB,KAK/BrF,KAAKsF,cAAL,yFAAuGtF,KAAKkF,SAA5G,yBAAqIK,mBAAmBvF,KAAKoF,aAA7J,kBAAmLpF,KAAKmF,OAAxL,WAPJ,qGAWE,kIACS,IAAIK,SAAQ,SAACC,EAASC,GAAU,MAC/BC,EAAM,UAAGlH,aAAaC,QAAQoG,WAAxB,QAAuC,GAEnD,GAAIa,EAAQ,WACJxI,EAAQ,UAAGsB,aAAaC,QAAQqG,WAAxB,QAAyC,GACjDa,EAAO,UAAGnH,aAAaC,QAAQsG,WAAxB,QAAwC,GAC/Ca,EAAW,UAAGpH,aAAaC,QAAQuG,WAAxB,QAA4C,GAE7DQ,EAAQ,CACNE,SAAQxI,WAAUyI,UAASC,qBAG7B1J,OAAO2J,KAAK,EAAKR,cAAe,cAAe,oEAE/CxE,QAAQC,KAAK,EAAKuE,eAEjBnJ,OAAe4J,SAAW,SAAU5I,EAAkBwI,EAAgBC,EAAiBC,GACtF/E,QAAQC,KAAK,CAAE5D,WAAUwI,SAAQC,UAASC,gBAC1CJ,EAAQ,CACNtI,WAAUwI,SAAQC,UAASC,gBAE7BpH,aAAauH,QAAQjB,GAAc5H,GACnCsB,aAAauH,QAAQlB,GAAYa,GACjClH,aAAauH,QAAQhB,GAAaY,GAClCnH,aAAauH,QAAQf,GAAiBY,QAzB9C,2CAXF,2IA0CE,uGACQA,EAAcpH,aAAaC,QAAQuG,IAEpCY,EAHP,yCAIW,MAJX,gCAOSI,MAAM,uCAAwC,CACnDC,QAAS,CACPC,cAAe,UAAF,OAAYN,MAE1B1F,MAAK,SAAAiG,GAAG,OAAIA,EAAIC,UAChBlG,MAAK,SAAAmG,GAGJ,OAFAxF,QAAQC,KAAK,CAAEuF,OAERA,MAfb,2CA1CF,kFA6DE,WACExF,QAAQC,KAAK,CAAEwF,oBAEf,IAAMC,EAAaD,SAASE,KAAKpC,QAAQ,IAAK,IAExCqC,EAAS,IAAIC,gBAAgBH,GAE7BZ,EAAUc,EAAOxL,IAAI,YACrB2K,EAAca,EAAOxL,IAAI,gBAEzB0L,EAAM,gBAAUhB,GAEtB9E,QAAQC,KAAK,CAAE6F,QAEf,IAA4BzJ,EAA0ByJ,EAA9CC,mBAAmClB,EAAWiB,EAAhBE,IAEtChG,QAAQC,KAAK,CAAE5D,WAAUwI,SAAQC,UAASC,gBAE1CkB,YAAW,WACT5K,OAAO6K,OAAOjB,SAAS5I,EAAUwI,EAAQC,EAASC,GAClD1J,OAAO8K,UACN,OAlFP,uCAsFE,WACE,OAAOhB,MAAM,uDAAyDxH,aAAaC,QAAQoG,IAAa,CACtGoB,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,YAEnB/E,MAAK,SAAAiG,GAAG,OAAIA,EAAIC,UAChBlG,MAAK,SAAAmG,GAGJ,OAFAxF,QAAQC,KAAK,CAAEuF,OAERA,EAAG7N,KAAK,QAhGvB,sCAoGE,SAA0ByO,GAYxB,OAAOjB,MAAM,2CAA6CiB,EAAU,CAClEhB,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,YAEnB/E,MAAK,SAAAiG,GAAG,OAAIA,EAAIC,UAChBlG,MAAK,SAAAmG,GAGJ,OAFAxF,QAAQC,KAAK,CAAEuF,OAERA,EAAG7N,KAAK,QAzHvB,yBA8HE,WACE,OAAOwN,MAAM,2DAA6DxH,aAAaC,QAAQoG,IAAa,CAC1GoB,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,YAEnB/E,MAAK,SAAAiG,GAAG,OAAIA,EAAIC,UAChBlG,MAAK,SAAAmG,GAGJ,OAFAxF,QAAQC,KAAK,CAAEuF,OAERA,EAAG7N,UAxIlB,yFA4IE,WAA0B4E,GAA1B,kGACM8J,EAAiB1I,aAAaC,QAAQoG,IAEpCsC,EAAiB,CAAEC,QAAO,UAAEhK,EAAMyB,YAAR,aAAE,EAAYwI,MAAM,KAAK5C,QAAO,SAAAnJ,GAAC,MAAU,KAANA,OAEjE8B,EAAM4B,cALZ,gCAMyBe,KAAKuH,yBAAyBlK,EAAM4B,eAN7D,OAMUnF,EANV,OAQIgH,QAAQC,KAAK,CAAEjH,WAEfqN,EAAiBrN,EAAOwD,GAV5B,UAawC,IAAlC8J,EAAeC,QAAQpO,OAb7B,kCAcUgN,MAAM,2DAA6DkB,EAAgB,CACvFjB,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,SAClB,eAAgB,oBAElBsC,OAAQ,MACRC,KAAMpH,KAAKO,UAAUwG,KArB3B,QAwBItG,QAAQC,KAAK,aAxBjB,eA2BQ2G,EAA4B,CAChCC,QAAStK,EAAMuK,OACf9J,MAAO,GAAcT,GACrBwK,qBAAsB,MA9B1B,UAiCQ5B,MAAM,uDAAyDkB,EAAgB,CACnFjB,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,SAClB,eAAgB,oBAElBsC,OAAQ,QACRC,KAAMpH,KAAKO,UAAU8G,KAxCzB,QA2CE5G,QAAQC,KAAK,yBAA0B,CACrCoG,iBACAC,iBACAM,8BA9CJ,iDA5IF,4IA8LE,WAAmB7D,GAAnB,8FACQ1G,EADR,UACmBsB,aAAaC,QAAQ,mBADxC,QACuD,GAEpC,OAAbsB,KAAKqF,IAHX,uBAIIrF,KAAKqF,IAAM,aAAW,CACpByC,SAAU,CACRZ,SAAU/J,EACV4K,SAAU,SAAF,OAAWtJ,aAAaC,QAAQ,iBAE1CsJ,WAAY,CACVC,QAAQ,EACRC,WAAW,KAXnB,SAcyBlI,KAAKqF,IAAI8C,UAdlC,OAcUrO,EAdV,OAeIgH,QAAQC,KAAK,CAAEjH,SAAQqD,aAf3B,uBAkBQ6C,KAAKqF,IAAI+C,IAAIjL,EAAUoH,GAAoBV,IAlBnD,gDA9LF,8IAmNE,WACEwE,GADF,4GAEEC,EAFF,+BAEU,IAFV,SAIuBrC,MAAM,kDAAD,OAAmDqC,EAAnD,kBAAkED,GAAS,IAAM,CACzGnC,QAAS,CACPC,cAAe,UAAF,OAAY1H,aAAaC,QAAQ,gBAC9C,YAAasB,KAAKkF,SAClB,eAAgB,oBAElBsC,OAAQ,QACPrH,MAAK,SAAAiG,GAAG,OAAIA,EAAIC,UAXrB,cAIQvM,EAJR,yBAaSA,GAbT,gDAnNF,iFAmOS,WACL2E,aAAauH,QAAQlB,GAAY,IACjCrG,aAAauH,QAAQjB,GAAc,IACnCtG,aAAauH,QAAQhB,GAAa,IAClCvG,aAAauH,QAAQf,GAAiB,QAvO1C,KCRa,GAAb,oJACE,uHACS,CACLY,YAAa,GACbD,QAAS,GACTzI,SAAU,GACVwI,OAAQ,KALZ,2CADF,2IAUE,uHACS,CACLkB,mBAAoB,WACpB0B,QAAS,GACTC,OAAQ,MAJZ,2CAVF,kFAmBE,cAnBF,gGAsBE,uHACS,CACL1K,MAAO,QACP6J,QAAS,OACTc,UAAW,iBAJf,2CAtBF,2IA+BE,uHACS,IADT,2CA/BF,kJAmCE,WAA0BpL,GAA1B,iFACEqL,MAAM,mCADR,2CAnCF,4IAuCE,WAAmB7E,GAAnB,iFACE6E,MAAM,wBAA0BnE,GAAoBV,IADtD,2CAvCF,qFA2CE,SACEwE,EACAC,GAEA,OAAO9C,QAAQE,OAAO,IAAIiD,MAAM,cA/CpC,uBAkDE,WACED,YAnDJ,KCPME,GAAa,GAAH,OAAMrC,SAAS/J,MACzB,GAAS,oDACF,GAAW,iCAEXqM,GAAc,IAAIlC,gBAAgBJ,SAASuC,QAExDhI,QAAQC,KAAK,CAAE8H,iBAER,IAAME,GAASF,GAAYG,IAAI,WAClC,IAAI,GACJ,IAAI,GAAiB,GAAU,GAAQJ,I,iBCZpC/F,IAAI,a,iDAAT,eAEM,MAFN,GAEM,CADJ,eAAa,qB,sBCOI,GAArB,yKAQE,WAEE,IAAI,QAAU7C,KAAKiJ,MAAMC,UAAW,CAClCC,UAAU,QAXhB,GAA8C,QAAzB,GAAgB,gBALpC,eAAQ,CACPC,WAAY,MAIO,c,UCJrB,GAAOC,OAAS,GAED,UCEA,kBAAgB,CAC7BD,WAAY,CACVE,iBAAA,GACAC,UAAA,SAEFC,MAAO,CACLnM,MAAO,CACLT,KAAM1D,OACNkJ,UAAU,GAEZpF,SAAU,CACRJ,KAAM6M,UAGVhR,KAd6B,WAczB,MACF,MAAO,CACL0J,aAAc,kBAAKnC,KAAK3C,OACxBmF,mBAAoB,cACpBM,YAAa,GACbhD,MAAOD,EAAMC,MACbb,gBAAgB,UAACe,KAAK3C,aAAN,QAAC,EAAY4B,iBAGjCyK,SAAU,CACRtG,QADQ,WACD,MACCA,EAAU,gBAAIlK,OAAOyQ,OAAO3J,KAAKF,MAAMhB,OAM7C,OAJA,UAAIkB,KAAKmC,oBAAT,OAAI,EAAmBR,YACrByB,EAAQ7J,KAAR,MAAA6J,EAAO,gBAASpD,KAAKmC,aAAaR,aAG7ByB,GAETT,eAVQ,WAWN,OAAO,GAAc,kBAChB3C,KAAKmC,gBAGZyH,sBAfQ,WAgBN,OAAOtF,GAAqB,kBACvBtE,KAAKmC,gBAGZM,kBApBQ,WAqBN,MAA4C,KAArCzC,KAAK0C,6BAEdA,4BAvBQ,WAwBN,IAAM9D,EAAWoB,KAAKmC,aAAavD,SAEnC,IAAKA,EACH,MAAO,uBAGT,IAAM+D,EAAiB,GAAc,iCAChC3C,KAAKmC,cAD0B,IAElCpE,eAAgB,OAGZ8L,EAAclH,EAAe1J,OAEnC,OAAI4Q,EAAc,IAChB,sGAAsGA,GAGjG,IAGTC,sBA5CQ,WA6CN,MAAgD,KAAzC9J,KAAK+J,iCAEdA,gCA/CQ,WAgDN,IAAMnL,EAAWoB,KAAKmC,aAAatD,iBAEnC,IAAKD,EACH,MAAO,sCAGT,IAAM+D,EAAiB,GAAc,iCAChC3C,KAAKmC,cAD0B,IAElCpE,eAAgB,OAGZ8L,EAAclH,EAAe1J,OAEnC,OAAI4Q,EAAc,IAChB,6GAA6GA,GAGxG,KAGXG,QAAS,CACP7F,OADO,WAELnE,KAAKiK,MAAM,WAEb7F,KAJO,WAKApE,KAAKmC,aAAarE,QAInBkC,KAAKyC,mBAITzC,KAAKiK,MAAM,OAAQjK,KAAKmC,gBAEpB8B,iBAfC,WAee,kLACM8E,GAAOmB,4BADb,cACdC,EADc,gBAEDpB,GAAOjG,cAFN,OAEdhE,EAFc,OAIf,EAAKqD,aAAavD,WACrB,EAAKuD,aAAavD,SAAWuL,EAAYrM,OAG3C,EAAKqE,aAAayF,OAASuC,EAAYxC,QACvC,EAAKxF,aAAa6B,SAAWmG,EAAY1B,UAEzC3H,QAAQC,KAAK,CAAEoJ,cAAarL,SAEtBsL,EAAe3F,GAA2B3F,GAEhDgC,QAAQC,KAAK,CAAEjC,OAAMsL,iBACrB,EAAKjI,aAAaR,WAAayI,EAE/B,EAAKtH,YAAcsH,EAlBC,+CAoBtBC,oBAnCO,WAmCY,iBAGjBvJ,QAAQC,KAAK,CACX1D,MAAO2C,KAAKmC,aACZrC,MAAK,UAAEO,KAAKO,UAAUZ,KAAKF,MAAMhB,aAA5B,QAAqC,gBAC1CwL,MAAM,IAGRtK,KAAK8C,YAAL,oBAAmB9C,KAAKmC,aAAarD,YAArC,aAAmB,EACfwI,MAAM,KACPzF,KAAI,SAAAvE,GAAE,OAAI,EAAKwC,MAAMhB,KAAKxB,MAC1BoH,QAAO,SAAAnJ,GAAC,QAAMA,YAHjB,QAGuB,GAEvByE,KAAKuK,qBAEPxH,WAnDO,WAoDL,IAAMyH,EAAaxK,KAAKiJ,MAAcwB,UAAU3L,KAEhDkB,KAAK8C,YAAc0H,EAEnB1J,QAAQC,KAAKf,KAAKiJ,OAClBnI,QAAQC,KAAK,wBAAyBf,KAAK8C,aAE3C9C,KAAKuK,qBAEPA,kBA7DO,WA8DLvK,KAAKmC,aAAarD,KAAOkB,KAAK8C,YAAYjB,KAAI,SAAAtG,GAAC,OAAIA,EAAE+B,MAAIwE,KAAK,MAEhE8B,WAhEO,WAiEL5D,KAAKmC,aAAapD,SAASxF,KAAK,CAC9BsB,KAAM,cACNkJ,QAAS,MAGbD,cAtEO,SAsEQJ,GACb1D,KAAKmC,aAAapD,SAAS5E,OAAOuJ,EAAO,IAE3CQ,aAzEO,WA0ELlE,KAAKmC,aAAajD,UAAW,EAC7Bc,KAAKoE,SAGTsG,MAAO,CACLrN,MADK,SACEsN,GACL3K,KAAKmC,aAAL,kBAAyBwI,GAEzB3K,KAAKqK,wBAGTO,QAhL6B,WAiL3B5K,KAAKqK,yB,oBCpLT,GAAOhB,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,U,+ECRRvO,MAAM,gB,0EAAX,eAGM,MAHN,GAGM,CAFJ,eAAa,iCACb,eAAiG,UAAzFM,KAAK,SAASN,MAAM,yCAA0C,QAAK,+BAAE,EAAA6H,YAAU,UAK5E,IACbtJ,KAAM,gBACNmP,QAAS,CACP7F,OADO,WAELnE,KAAKiK,MAAM,a,UCPjB,GAAOZ,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,U,0FCALvO,MAAM,uB,GAAyG,eAAK,mB,GAG5H,eAAI,mB,GACuD,eAAM,mB,kBAAA,W,eAOvDA,MAAM,c,cAOhB,eAAI,mB,GACJ,eAAI,mB,IAEEA,MAAM,uB,uBAAoD,eAAK,mB,8GA5BrE,eAKK,W,8BALG,EAAAe,MAAMS,OAAQ,KAAG,eAAE,EAAAT,MAAMU,gBAAgB,KAC/C,kBAAsG,UAA9FnB,KAAK,SAASN,MAAM,qBAAsB,QAAK,+BAAE,EAAA2N,MAAK,iBAAmB,EAAA5M,UAAQ,QACzF,eAA+F,UAAvFT,KAAK,SAASN,MAAM,mBAAoB,QAAK,+BAAE,EAAA2N,MAAK,eAAiB,EAAA5M,UAAQ,KAEzE,EAAAA,MAAM4B,e,iBAAlB,eAAiE,UAAhC,KAAE,eAAE,EAAA5B,MAAM4B,eAAa,I,wBAE1D,eAEK,WADH,eAAgF,OAAhF,GAAgF,eAA3C,EAAA6L,cAAc,EAAAzN,OAAOhB,MAAK,U,8BAAoB,EAAAyO,cAAc,EAAAzN,OAAOhB,MAAK,KAAO,IAAC,QAGvH,G,eAAI,UACE,yBAAE,EAAAgB,MAAM2G,gBAAR,QAAgB,gCAAoC,IAAC,M,GAE/C,EAAA3G,MAAMyB,M,iBAAlB,eAOO,Y,mBANL,eAKO,qCAJiB,EAAAzB,MAAMyB,YAIvB,aAJiB,EAAYwI,MAAK,KAAMzF,KAAI,SAAAvE,GAAE,uBAAI,EAAAwC,MAAMhB,KAAKxB,UAAf,aAAI,EAAgBzC,SAAI,SAAhEkQ,G,wBADb,eAKO,QALDzO,MAAM,YAELV,IAAKmP,G,CAEV,eAA2C,OAA3C,GAA2C,eAAhBA,GAAO,Q,+BAGzB,EAAA1N,MAAMyB,K,wCAAnB,eAEO,UAFkB,mCAIzB,GACA,GAEA,eAA+D,OAA/D,GAA+D,eAA1B,EAAAkM,kBAAgB,G,GAAW,GAChE,eAAoH,UAA5GpO,KAAK,SAASN,MAAM,qBAAsB,QAAK,+BAAE,EAAA2N,MAAK,mBAAqB,EAAA5M,UAAQ,oBAC3F,eAG8E,UAHtET,KAAK,SACLN,MAAK,CAAC,UAAS,cACQ,EAAAU,SAAQ,eAAkB,EAAAA,WAChD,QAAK,+BAAE,EAAAiN,MAAK,eAAiB,EAAA5M,UAAQ,0BAAuB,I,OC5BxD,I,oBAAA,eAAgB,CAC7BmM,MAAO,CACLnM,MAAO,CACLT,KAAM1D,OACNkJ,UAAU,GAEZpF,SAAU,CACRJ,KAAM6M,UAGVhR,KAV6B,WAW3B,MAAO,CACLqH,MAAOD,EAAMC,QAGjB4J,SAAU,CACRsB,iBADQ,WACQ,WACRC,EAAwBjL,KAAKF,MAAMF,QACtC8E,QAAO,SAAAwG,GAAC,OAAIA,EAAE5L,UAAY,EAAKjC,MAAMC,MAExC,GAAI2N,EAAsBhS,OAAS,EAAG,CACpCgS,EAAsBE,MAAK,SAAUC,EAAGC,GACtC,OAAKD,EAAE3J,MAAS4J,EAAE5J,KAMX6J,OAAO,IAAI5J,KAAK2J,EAAE5J,OAAS6J,OAAO,IAAI5J,KAAK0J,EAAE3J,OAL3C,KAQX,IAAM8J,EAAcN,EAAsB,GAE1C,gBAAU,IAAIvJ,KAAK6J,EAAY9J,MAAO+J,iBAAtC,6BAA2ED,EAAYhM,WAKzF,OAFAuB,QAAQC,KAAK,CAAEkK,0BAER,KAGXjB,QAAS,CACPc,cADO,SACQzN,GACb,OAAO,GAAcA,QC9C3B,GAAOgM,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,U,kKCLb,eAIM,2BAJwB,EAAAY,eAAa,SAA9BlK,EAAOmC,G,wBAApB,eAIM,OAJwC9H,IAAK2F,EAAMjE,I,CACnC,IAAVoG,G,iBAAV,eAAuB,U,sBACvB,eAA0B,yBAAlBnC,EAAMnC,MAAI,G,eAAQ,IAC1B,mBAAMsC,KAAKH,EAAME,MAAM+J,kBAAc,Q,QCC1B,I,UAAA,eAAgB,CAC7B/S,KAD6B,WAE3B,MAAO,CACLqH,MAAOD,EAAMC,QAGjB4J,SAAU,CACR+B,cADQ,WAEN,IAAMC,EAAW,gBAAI1L,KAAKF,MAAMF,SAehC,OAbA8L,EAASP,MAAK,SAACC,EAAGC,GAChB,IAAMM,EAAQjK,KAAKpB,MAAM8K,EAAE3J,KAAMmK,YAC3BC,EAAQnK,KAAKpB,MAAM+K,EAAE5J,KAAMmK,YAEjC,OAAID,EAAQE,EACH,EACEF,EAAQE,GACT,EAED,KAIJH,EAASrP,MAAM,EAAG,QCzB/B,GAAOgN,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,U,+ECLRvO,MAAM,e,IACJA,MAAM,a,GACT,eAAoD,SAA7C4F,IAAI,kBAAiB,oBAAgB,G,GAK5C,eAEM,YADJ,eAAgG,U,eAA7F,oBAAgB,eAAmB,YAAb,U,eAAa,SAAK,eAAsB,YAAhB,a,eAAgB,mC,MAIrE,eAAM,mB,cAWN,eAAK,mB,0EAvBP,eA4BM,MA5BN,GA4BM,CA3BJ,eASM,MATN,GASM,CARJ,G,eACA,eAE+B,SAFxBtF,KAAK,OAAOU,GAAG,iBAAiBhB,MAAM,YACtC+F,aAAa,M,qDACJ,EAAAyJ,cAAa,K,mBAAb,EAAAA,iBAEhB,KAKF,GAEW,EAAAC,wB,iBAAX,eAEM,SAF6B,KAChC,eAAG,EAAA3B,cAAe,mBACrB,I,sBAEc,EAAA4B,aAAe,EAAAD,wB,iBAA7B,eAGS,U,MAH4CnP,KAAK,SAClDN,MAAM,UAAW,QAAK,+BAAE,EAAA2P,sBAAoB,6B,sBAIpD,GAEA,eAAgF,UAAxErP,KAAK,SAASN,MAAM,mBAAoB,QAAK,+BAAE,EAAA6H,YAAU,UACjE,eAAmE,UAA3DvH,KAAK,SAASN,MAAM,UAAW,QAAK,+BAAE,EAAA8H,UAAQ,aCpB3C,kBAAgB,CAC7B3L,KAD6B,WAE3B,MAAO,CACLqH,MAAOD,EAAMC,MACbgM,cAAe,GACf1B,aAAc,EACd2B,wBAAwB,IAG5BnB,QAT6B,WAU3B5K,KAAK8L,cAAgBtN,EAAaD,IAEpCmL,SAAU,CACRsC,WAAY,WACV,OAAOnM,EAAMC,MAAM9C,WAGvBgN,QAAS,CACP7F,OADO,WAELnE,KAAKiK,MAAM,WAEb7F,KAJO,WAKL3F,aAAauH,QAAQzH,EAAuByB,KAAK8L,eACjDtN,EAAaD,GAAyByB,KAAK8L,cAE3C9L,KAAKiK,MAAM,SAEPgC,iBAVC,WAUe,oKACpB,EAAKF,wBAAyB,EAE1BG,EAAa,GAHG,uBAOHnD,GAAOoD,cAAcD,GAPlB,UAOlBpS,EAPkB,OASbA,EATa,sDAalBgH,QAAQC,KAAK,CAAEjH,YAEXA,EAAOrB,KAAKQ,OAfE,oBAgBVmT,EAAiB3H,GAA2B3K,EAAOrB,MAEnD4T,EAAUxM,EAAM+B,kBAAkBwK,GAExB,IAAZC,EApBY,qDAyBlBH,EAAapS,EAAOwS,WAAWC,OAzBb,WA0BY,IAAvBzS,EAAOrB,KAAKQ,OA1BD,kEC/B1B,GAAOoQ,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,U,qFCJNvO,MAAM,sB,qJADb,eAMkB,G,WANQ,EAAAkQ,S,qDAAA,EAAAA,SAAQ,K,aAChC,iBAIM,CAJgC,EAAAA,U,iBAAtC,eAIM,MAJN,GAIM,CAHJ,eAEiB,GAFA,SAAM,+BAAE,EAAAC,gB,aACvB,iBAAa,CAAb,eAAa,qC,0ECaA,GAArB,yG,0BAIS,EAAAD,SAAW,EAAKxO,OAJzB,mDAME,WACEgC,KAAKiK,MAAM,iBAAiB,GAC5BjK,KAAKwM,UAAW,EAChBxM,KAAKiK,MAAM,UAAU,OATzB,GAAmC,QAEjC,gBADC,gBAAK,CAAEyC,SAAS,K,8BADE,GAAK,gBAZzB,eAAQ,CACPtD,WAAY,CACVuD,kBAIFjC,MAAO,CACL1M,OADK,SACG4O,GACN5M,KAAKwM,SAAWI,OAID,cCdrB,GAAOvD,OAAS,GAChB,GAAOwB,UAAY,kBAEJ,I,GAAA,MCWf,SAASgC,GAAMC,GACb,OAAO,IAAItH,SAAQ,SAAAC,GAAO,OAAIsB,WAAWtB,EAASqH,MAG7C,IAAMC,GAAa,IAAIpG,gBAAJ,WAAoBJ,SAASE,YAA7B,cAAoB,GAAepC,QAAQ,IAAK,KAarD,GAArB,yG,0BACE,EAAAvE,MAAQD,EAAMC,MAEd,EAAAnD,cAAe,EAEf,EAAAJ,iBAAmBwQ,GAAW/D,IAAI,YAElC,EAAAhM,UAAW,EACX,EAAAG,SAAW,GACX,EAAAL,aAAc,EACd,EAAAC,aAAc,EACd,EAAAF,aAAc,EACd,EAAAqB,aAA4B,eAAc,MAZ5C,yGAcE,2GACM8B,KAAKzD,kBACPwM,GAAOiE,cAFX,SAK4BjE,GAAOkE,cALnC,UAKQC,EALR,OAOEpM,QAAQC,KAAK,CAAEmM,iBACXA,EARN,oBASIlN,KAAKhD,WAAY,OAACkQ,QAAD,IAACA,MAAarG,oBAC1B7G,KAAKhD,SAVd,wBAWMgD,KAAKhD,UAAW,EAChB+L,GAAOoE,YAZb,2BAgBInN,KAAK7C,SAAW+P,EAAYrG,mBAhBhC,wBAkBI7G,KAAKhD,UAAW,EAlBpB,QAqBE6C,EAAME,YAAYC,KAAKhD,UArBzB,iDAdF,+EAsCE,SAAUK,GACRwC,EAAMY,SAASpD,GAEf2C,KAAKnD,aAAc,IAzCvB,yBA4CE,SAAaQ,GACPlB,OAAOiR,QAAQ,uBACjBvN,EAAMpC,YAAYJ,KA9CxB,0BAkDE,SAAcA,GACZyD,QAAQC,KAAK,CAAE1D,UACf2C,KAAK9B,aAAeb,IApDxB,uBAuDE,SAAWA,GACTyD,QAAQC,KAAK,CAAE1D,UACfwC,EAAMzB,UAAUf,GAChB2C,KAAK9B,aAAe,OA1DxB,6BA6DE,SAAiBb,GACfA,EAAMU,iBACN8B,EAAMzB,UAAUf,GAGhByD,QAAQC,KAAK,yBAAb,kBAA4C1D,MAlEhD,kFAqEE,WAAmBA,GAAnB,oGACEwC,EAAMyB,gBAAgB,CACpBlC,KAAM,WAAF,OAAa/B,EAAMS,MAAnB,aAA6BT,EAAMU,gBACvCwB,UAAW,GAAclC,GACzBiC,QAAO,UAAEjC,EAAMC,UAAR,SAAe,EACtB+B,YAAahC,EAAMU,iBALvB,SAQQgL,GAAOsE,mBAAmBhQ,GARlC,wBAUwBA,EAAM0B,UAV9B,gEAUa8E,EAVb,kBAWUkF,GAAOuE,YAAYzJ,GAX7B,yBAYUgJ,GAAK,KAZf,0MArEF,yIAqFE,wHACqC9D,GAAOwE,QAD5C,gBACU5H,EADV,EACUA,OAAQxI,EADlB,EACkBA,SACZwI,IACF3F,KAAKhD,UAAW,EAChBgD,KAAK7C,SAAWA,GAJpB,gDArFF,6EA6FE,WACE4L,GAAOoE,YACPnN,KAAKhD,UAAW,EAChBgD,KAAK7C,SAAW,KAhGpB,4BAmGE,SAAgBE,GACdA,EAAM6B,UAAW,EACjBW,EAAMzB,UAAUf,KArGpB,yBAwGE,WACE,OAAO2C,KAAKF,MAAMH,OAAO+E,QAAO,SAAAnJ,GAAC,OAAKA,EAAE2D,cAzG5C,0BA4GE,WACE,OAAOc,KAAKF,MAAMH,OAAO+E,QAAO,SAAAnJ,GAAC,OAAIA,EAAE2D,gBA7G3C,GAAiC,QAAZ,GAAG,gBAXvB,eAAQ,CACPkK,WAAY,CACVoE,MAAA,GACAC,aACAd,iBACAe,cACAC,eACAC,QAASA,GACTtE,iBAAA,OAGiB,c,UC7BrB,GAAOD,OAASA,EAED,U,aCFb,gBAAS,GAAD,OAAI,GAAJ,qBAA6C,CACnDwE,MADmD,WAEjD/M,QAAQgN,IACN,uGAIJC,WAPmD,WAQjDjN,QAAQgN,IAAI,wCAEdE,OAVmD,WAWjDlN,QAAQgN,IAAI,6CAEdG,YAbmD,WAcjDnN,QAAQgN,IAAI,gCAEdI,QAhBmD,WAiBjDpN,QAAQgN,IAAI,8CAEdK,QAnBmD,WAoBjDrN,QAAQgN,IAAI,kEAEdM,MAtBmD,SAsB5C,GACLtN,QAAQsN,MAAM,4CAA6C,M,2BCpBjE,eAAU,IACPC,IAAI,mBACJC,MAAM,S","file":"js/app.84bbe022.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TopicForm.vue?vue&type=style&index=1&id=c0c8e0ac&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TopicForm.vue?vue&type=style&index=0&id=c0c8e0ac&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=0ce41e7b&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ScrollingContent.vue?vue&type=style&index=0&id=56a80012&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClosablePanel.vue?vue&type=style&index=0&id=203cd942&scoped=true&lang=css\"","<template>\n  <div v-if=\"authRedirectMode\">\n    HI, You were authenticated, this window will close in 4 Seconds :)\n  </div>\n\n  <div v-else>\n\n     <a class=\"github-link\"\n        href=\"https://github.com/negue/stream-ep-counter\" target=\"_blank\" rel=\"noopener\"\n        @mouseover=\"startAnimate = true\"\n        @mouseout=\"startAnimate = false\">\n            <i class=\"nes-octocat\" :class=\"startAnimate ? 'animate' : ''\"></i>\n          </a>\n\n  <div class=\"flex-holder\">\n    <div class=\"column\">\n      <div class=\"scrolling-holder \">\n        <div class=\"nes-container is-rounded is-dark with-title\">\n          <p class=\"title\">Stream Topics</p>\n\n          <div>\n          <button type=\"button\" class=\"nes-btn is-primary\" @click=\"showNewForm = !showNewForm\">\n            Add new topic\n          </button>\n          <button type=\"button\" class=\"nes-btn is-primary\" @click=\"showHistory = !showHistory\">\n            Toggle History\n          </button>\n\n            <button type=\"button\" class=\"nes-btn is-primary\" @click=\"showOptions = !showOptions\">\n              Toggle Options\n            </button>\n\n          <button @click=\"getToken()\"\n                  class=\"nes-btn is-success\"\n                  v-if=\"!loggedIn\">Twitch Auth</button>\n          <button @click=\"logout()\"\n                  class=\"nes-btn is-error\"\n                  v-if=\"loggedIn\">Logout: {{userName}}</button>\n          </div>\n        </div>\n        <scrolling-content class=\"scrolling-content-outer\">\n          <div class=\"scrolling-content-inner\">\n            <div v-for=\"(topic) of currentTopics\" :key=\"topic.id\" class=\"topic-container\">\n            <div class=\"nes-container is-rounded is-dark\">\n              <div>\n            <topic-entry :topic=\"topic\"\n                         :loggedIn=\"loggedIn\"\n                         @show-edit-form=\"showEditForm($event)\"\n                         @delete-topic=\"deleteTopic($event)\"\n                         @increase-counter=\"increaseCounter($event)\"\n                         @setup-twitch=\"setupTwitch($event)\"\n                        >\n            </topic-entry>\n              </div>\n            </div>\n          </div>\n\n            <div class=\"topic-container\">\n            <span v-for=\"(topic) of archivedTopics\" :key=\"topic.id\" class=\"topic-container\">\n              <button @click=\"unArchiveTopic(topic)\"\n                      class=\"nes-btn is-error\">\n                Unarchive: {{topic.title}} [{{topic.currentCounter}}]\n              </button>\n            </span>\n            </div>\n          </div>\n        </scrolling-content>\n      </div>\n    </div>\n    <div class=\"column\">\n\n    </div>\n  </div>\n\n  <modal v-model:opened=\"showOptions\">\n    <options @cancel=\"showOptions = false\"></options>\n  </modal>\n\n  <modal v-model:opened=\"showHistory\">\n    <p class=\"title\">Changed history:</p>\n    <history-list></history-list>\n  </modal>\n\n  <modal v-model:opened=\"showNewForm\">\n    <p class=\"title\">New Topic</p>\n\n    <topic-form @save=\"onAddNew\"\n                @cancel=\"showNewForm = false\"\n                :loggedIn=\"loggedIn\"\n    ></topic-form>\n  </modal>\n\n  <modal :opened=\"formForTopic != null\"\n         @closed=\"formForTopic = undefined\">\n\n    <div v-if=\"formForTopic\">\n      <p class=\"title\">Edit Topic: {{formForTopic.title}}</p>\n\n      <topic-form :topic=\"formForTopic\"\n                  @save=\"editTopic\"\n                  @cancel=\"formForTopic = undefined\"\n                  :loggedIn=\"loggedIn\"\n      ></topic-form>\n    </div>\n  </modal>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport { store } from '@/state';\nimport TopicForm from '@/components/TopicForm.vue';\nimport { reactive } from 'vue';\nimport ClosablePanel from '@/components/ClosablePanel.vue';\nimport { Topic } from '@/types';\nimport { generateTitle } from '@/utils';\nimport { twitch } from '@/twitch-instance';\nimport TopicEntry from '@/components/TopicEntry.vue';\nimport HistoryList from '@/components/HistoryList.vue';\nimport OptionsVue from '@/components/Options.vue';\nimport ScrollingContent from '@/components/ScrollingContent.vue';\nimport Modal from '@/components/Modal.vue';\n\n// TODO extract handler / instance\n\nfunction wait (ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const hashParams = new URLSearchParams(location.hash?.replace('#', ''));\n\n@Options({\n  components: {\n    Modal,\n    TopicForm,\n    ClosablePanel,\n    TopicEntry,\n    HistoryList,\n    Options: OptionsVue,\n    ScrollingContent\n  }\n})\nexport default class App extends Vue {\n  state = store.state;\n\n  startAnimate = false;\n\n  authRedirectMode = hashParams.has('id_token');\n\n  loggedIn = false;\n  userName = '';\n  showHistory = false;\n  showOptions = false;\n  showNewForm = false;\n  formForTopic?: Topic|null = reactive<any>(null);\n\n  async mounted () {\n    if (this.authRedirectMode) {\n      twitch.checkTokens();\n    }\n\n    const loginResult = await twitch.loginExists();\n\n    console.info({ loginResult });\n    if (loginResult) {\n      this.loggedIn = !!loginResult?.preferred_username;\n      if (!this.loggedIn) {\n        this.loggedIn = false;\n        twitch.resetAuth();\n        return;\n      }\n\n      this.userName = loginResult.preferred_username;\n    } else {\n      this.loggedIn = false;\n    }\n\n    store.setLoggedIn(this.loggedIn);\n  }\n\n  onAddNew (topic: Topic) {\n    store.addTopic(topic);\n\n    this.showNewForm = false;\n  }\n\n  deleteTopic (topic: Topic) {\n    if (window.confirm('Delete this topic?')) {\n      store.deleteTopic(topic);\n    }\n  }\n\n  showEditForm (topic: Topic) {\n    console.info({ topic });\n    this.formForTopic = topic;\n  }\n\n  editTopic (topic: Topic) {\n    console.info({ topic });\n    store.editTopic(topic);\n    this.formForTopic = null;\n  }\n\n  increaseCounter (topic: Topic) {\n    topic.currentCounter++;\n    store.editTopic(topic);\n\n    // push new title to twitch\n    console.info('Push title to Twitch: ', { ...topic });\n  }\n\n  async setupTwitch (topic: Topic) {\n    store.addHistoryEntry({\n      task: `Applied ${topic.title}: ${topic.currentCounter}`,\n      lastTitle: generateTitle(topic),\n      topicId: topic.id ?? -1,\n      lastCounter: topic.currentCounter\n    });\n\n    await twitch.applyTopicToTwitch(topic);\n\n    for (const command of topic.commands) {\n      await twitch.writeToChat(command);\n      await wait(1000);\n    }\n  }\n\n  async getToken () {\n    const { userId, userName } = await twitch.login();\n    if (userId) {\n      this.loggedIn = true;\n      this.userName = userName;\n    }\n  }\n\n  logout () {\n    twitch.resetAuth();\n    this.loggedIn = false;\n    this.userName = '';\n  }\n\n  unArchiveTopic (topic: Topic) {\n    topic.archived = false;\n    store.editTopic(topic);\n  }\n\n  get currentTopics () {\n    return this.state.topics.filter(t => !t.archived);\n  }\n\n  get archivedTopics () {\n    return this.state.topics.filter(t => t.archived);\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n  background: #212529;\n}\n\n* {\n  /* https://fonts.google.com/specimen/Press+Start+2P?query=Press+Start+2P */\n  font-family: 'Press Start 2P', Arial, sans-serif;\n}\n\n.flex-holder {\n  display: flex;\n  flex-direction: row;\n}\n\n.column {\n  flex: 1;\n\n  &:empty {\n    display: none;\n  }\n}\n\n.scrolling-holder {\n  max-height: calc(100vh);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.topic-container {\n  width: calc(50% - 0.5rem);\n}\n\n.scrolling-content-outer {\n  flex: 1;\n  //noinspection CssInvalidPropertyValue\n  overflow-y: clip;\n}\n\n.scrolling-content-inner {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.nes-badge {\n  margin-right: 1rem;\n  white-space: initial;\n}\n\n.github-link {\n    filter: drop-shadow(1px 1px 0 white) drop-shadow(-1px -1px 0 white);\n\n    position: fixed;\n    top: 1rem;\n    right: 1rem;\n    z-index: 999;\n    transition: all 0.3s ease;\n}\n\n.vfm__container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.vfm__content {\n  display: flex;\n  flex-direction: column;\n  margin: 0 1rem;\n  padding: 1rem;\n}\n\n.nes-dialog {\n  border-style: solid;\n  border-color: #3e4446 !important;\n  padding: 1rem 1rem;\n}\n\n</style>\n","\nexport const COMMAND_SYNTAX_NAME = '{name}';\nexport const COMMAND_SYNTAX_CONTENT = '{content}';\nexport const CONFIG_COMMAND_SYNTAX = 'commandSyntax';\n\nexport const CONFIG_STATE = {\n  [CONFIG_COMMAND_SYNTAX]: localStorage.getItem(CONFIG_COMMAND_SYNTAX) ??\n    `!editcommand ${COMMAND_SYNTAX_NAME} ${COMMAND_SYNTAX_CONTENT}`\n};\n\nexport interface TagData {\n  id: string;\n  name: string;\n}\n\nexport interface Command {\n  name: string;\n  content: string;\n}\n\nexport interface Topic {\n  id?: number;\n  currentCounter: number;\n  title: string;\n  customChannel: string;\n  template: string;\n  notificationText: string;\n  gameId?: string;\n  gameName?: string;\n  tags: string;\n\n  importTags?: TagData[];\n  commandsJson: string;\n  commands: Command[]; // will be saved as json\n\n  archived: boolean;\n}\n\nexport interface HistoryEntry {\n  id?: number;\n  date?: Date | string | null;\n  topicId: number;\n  lastCounter: number;\n  lastTitle: string;\n  task: string;\n}\n\nexport interface Dictionary<T> {\n  [key: string]: T;\n}\n\nexport interface State {\n  topics: Topic[];\n  history: HistoryEntry[];\n  tags: Dictionary<TagData>;\n  loggedIn: boolean;\n}\n\nexport const INITIAL_TOPIC_OBJECT: Topic = {\n  currentCounter: 1,\n  title: '',\n  template: '',\n  notificationText: '',\n  tags: '',\n  commands: [],\n  commandsJson: '[]',\n  customChannel: '',\n\n  archived: false\n}\n\nexport const INITIAL_HISTORY_OBJECT: HistoryEntry = {\n  task: '',\n  lastCounter: 0,\n  topicId: -1,\n  lastTitle: ''\n}\n\nexport interface TwitchChannelInformation {\n  game_name: string;\n  game_id: string;\n  title: string;\n\n}\n\nexport interface TwitchChannelTag {\n  localization_names: {[key: string]: string};\n  tag_id: string;\n  is_auto: boolean;\n}\n\nexport interface TwitchLoginExistsPayload {\n  preferred_username: string;\n  message: string;\n  status: number;\n}\n\nexport interface TwitchLoginPayload {\n  userId: string;\n  userName: string;\n  tokenId: string;\n  accessToken: string;\n}\n\nexport interface TwitchPaginatedDataResult<T> {\n  data: T[];\n  pagination: {\n    cursor: string;\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface ITwitchApiHandler {\n  login (): Promise<TwitchLoginPayload>;\n  loginExists (): Promise<TwitchLoginExistsPayload | null>;\n  checkTokens (): void;\n  currentChannelInformation (): Promise<TwitchChannelInformation>;\n  currentTags (): Promise<TwitchChannelTag[]>;\n  applyTopicToTwitch (topic: Topic): void;\n  writeToChat(command: Command): Promise<void>;\n  resetAuth (): void;\n  listFirstTags (\n    after?: string|undefined,\n    first?: number|undefined\n  ): Promise<TwitchPaginatedDataResult<TwitchChannelTag>>;\n}\n","import Dexie from 'dexie';\nimport { HistoryEntry, TagData, Topic } from '@/types';\n\nexport class DexieDatabase extends Dexie {\n  topics!: Dexie.Table<Topic, number>;\n  history!: Dexie.Table<HistoryEntry, number>;\n  tags!: Dexie.Table<TagData, string>;\n\n  constructor () {\n    super('StreamEpCounter');\n\n    const db = this;\n\n    //\n    // Define tables and indexes\n    //\n    db.version(7).stores({\n      topics: '++id, currentCounter, title, notificationText, template, gameId, gameName, tags, commandsJson, archived',\n      history: '++id, date, task',\n      tags: 'id, name'\n    });\n  }\n}\n\nexport const db = new DexieDatabase();\n","import { reactive } from 'vue';\nimport { HistoryEntry, INITIAL_HISTORY_OBJECT, INITIAL_TOPIC_OBJECT, State, TagData, Topic } from '@/types';\nimport { db } from '@/dexieDatabase';\n\nexport const store = {\n  state: reactive<State>({\n    topics: [],\n    history: [],\n    tags: {},\n    loggedIn: false\n  }),\n\n  setLoggedIn (loggedIn: boolean) {\n    this.state.loggedIn = loggedIn;\n  },\n\n  loadDataFromDb () {\n    db.topics.toArray().then(allTopics => {\n      for (const topic of allTopics) {\n        topic.commands = JSON.parse(topic.commandsJson ?? '[]');\n      }\n\n      store.state.topics = allTopics;\n    });\n\n    db.history.toArray().then(allEntries => {\n      store.state.history = allEntries;\n    });\n\n    db.tags.toArray().then(allEntries => {\n      for (const tagEntry of allEntries) {\n        store.state.tags[tagEntry.id] = tagEntry;\n      }\n    });\n  },\n\n  addTopic (data: Partial<Topic>) {\n    const realTopic: Topic = Object.assign({}, INITIAL_TOPIC_OBJECT, data);\n\n    const commands = realTopic.commands;\n    realTopic.commandsJson = JSON.stringify(realTopic.commands);\n    delete realTopic.commands;\n\n    this.importTagsAndUpdateTagIdList(realTopic);\n\n    this.state.topics.push(realTopic);\n\n    console.info('pre calling topic add');\n    db.topics.add(realTopic);\n\n    realTopic.commands = commands;\n  },\n\n  deleteTopic (data: Topic) {\n    const indexOfTopic = this.state.topics.indexOf(data);\n\n    if (indexOfTopic !== -1) {\n      this.state.topics.splice(indexOfTopic, 1);\n    }\n\n    db.topics.delete(data.id!);\n  },\n  editTopic (topic: Topic) {\n    const indexOfTopic = this.state.topics.findIndex(t => t.id === topic.id);\n\n    const realTopic: Topic = Object.assign({}, topic);\n\n    const commands = realTopic.commands;\n    realTopic.commandsJson = JSON.stringify(realTopic.commands);\n    delete realTopic.commands;\n\n    this.importTagsAndUpdateTagIdList(realTopic);\n\n    if (indexOfTopic !== -1) {\n      this.state.topics[indexOfTopic] = realTopic;\n\n      console.info('updated in state?!', this.state);\n    }\n\n    console.info('pre calling topic update');\n    db.topics.update(topic.id!, realTopic);\n\n    realTopic.commands = commands;\n  },\n\n  addHistoryEntry (entry: HistoryEntry) {\n    const entryWithDefaults: HistoryEntry = Object.assign({\n      date: new Date()\n    }, INITIAL_HISTORY_OBJECT, entry);\n\n    this.state.history.push(entryWithDefaults);\n    db.history.add(entryWithDefaults);\n  },\n\n  importTagsAndUpdateTagIdList (topic: Topic) {\n    // check the current tags (name) if they already exist\n    // if not add those\n    if (topic.importTags) {\n      this.importUnknownTags(topic.importTags);\n\n      // at the end just use the id as comma list\n      topic.tags = topic.importTags?.map(t => t.id).join(',') ?? '';\n\n      delete topic.importTags;\n    }\n  },\n\n  importUnknownTags (tags: TagData[]): number {\n    let tagsImported = 0;\n\n    // if tag not in the dictionary => add it\n    // otherwise => ignore it\n\n    for (const tag of tags) {\n      if (!this.state.tags[tag.id]) {\n        this.state.tags[tag.id] = tag;\n\n        const realTag: TagData = Object.assign({}, tag);\n\n        console.info('PRE adding a tag', tag);\n        db.tags.add(realTag);\n        tagsImported++;\n      }\n    }\n\n    return tagsImported;\n  }\n};\n\nstore.loadDataFromDb();\n\n// (window as any).store = store;\n","<template>\n  <scrolling-content class=\"topic-form-outer\">\n    <div class=\"form-holder topic-form\">\n      <div class=\"column\">\n        <div class=\"nes-field\">\n          <label for=\"name_field\"> Topic </label>\n          <input type=\"text\" id=\"name_field\" class=\"nes-input\"\n                 :class=\"{'is-error': !workingTopic.title }\"\n                 :required=\"!workingTopic.title\"\n                 autocomplete=\"off\"\n                 v-model=\"workingTopic.title\">\n        </div>\n\n        <div class=\"nes-field\">\n          <label>\n            <input type=\"checkbox\" class=\"nes-checkbox is-dark\" v-model=\"customChannel\" />\n            <span>Custom Channel</span>\n          </label>\n          <input type=\"text\" class=\"nes-input\" v-if=\"customChannel\"\n                 :class=\"{'is-error': customChannel && !workingTopic.customChannel, 'is-disabled': !customChannel }\"\n                 :required=\"!workingTopic.customChannel\"\n                 :disabled=\"!customChannel\"\n                 autocomplete=\"off\"\n                 v-model=\"workingTopic.customChannel\">\n        </div>\n\n        <div class=\"nes-field\">\n          <label for=\"counter_field\">Counter</label>\n          <input type=\"number\" id=\"counter_field\" class=\"nes-input\"\n                 autocomplete=\"off\"\n                 v-model=\"workingTopic.currentCounter\">\n        </div>\n\n        <div class=\"nes-field\">\n          <label for=\"title_field\">Title-Template</label>\n          <textarea id=\"title_field\" class=\"nes-textarea\"\n                    v-model=\"workingTopic.template\"></textarea>\n\n          <div v-if=\"!workingTopic.template?.includes('{{counter}}')\">\n            <i>You need to use <code>{{counterPlaceholder}}</code> as placeholder. </i>\n          </div>\n\n          <span class=\"nes-text is-error\" v-if=\"isTemplateInvalid\">\n            {{ notValidTemplateExplanation }}\n          </span>\n        </div>\n\n        <div class=\"nes-field\">\n          <label>In Twitch Overview</label>\n          <span class=\"nes-text is-warning\">\n          {{ generatedTitle.slice(0, 32) }}\n        </span>\n\n        </div>\n\n        <div class=\"nes-field\" v-if=\"false\">\n          <label for=\"notification_field\">Going-Live Notification Text</label>\n          <textarea id=\"notification_field\" class=\"nes-textarea\"\n                    v-model=\"workingTopic.notificationText\"></textarea>\n\n          <span class=\"nes-text is-error\" v-if=\"isNotificationInvalid\">\n            {{ notValidNotificationExplanation }}\n          </span>\n\n          <span class=\"nes-text\">\n            {{ generatedNotification }}\n          </span>\n        </div>\n\n        <div class=\"nes-field\">\n          <label>Tags</label>\n          <tags-input element-id=\"tags\" ref=\"tagsInput\"\n                      :value=\"currentTags\"\n                      @tags-updated=\"updateTags($event)\"\n                      :only-existing-tags=\"true\"\n                      id-field=\"id\"\n                      text-field=\"name\"\n                      :existing-tags=\"allTags\"\n                      :typeahead=\"true\"\n                      placeholder=\"Select tags\"\n                      :typeahead-activation-threshold=\"0\"\n                      :typeahead-max-results=\"10\"\n          >\n            <template v-slot:selected-tag=\"{ tag, index, removeTag }\">\n              {{tag.name}}\n              <span class=\"is-danger\" @click.prevent=\"removeTag(index)\">X</span>\n\n            </template>\n          </tags-input>\n        </div>\n\n      </div>\n\n      <div class=\"column\">\n      <div class=\"nes-field\">\n        <label>\n          Commands\n\n          <button type=\"button\" class=\"nes-btn\" @click=\"addCommand()\">Add new command</button>\n        </label>\n\n        <div v-for=\"(command, index) of workingTopic.commands\"\n             :key=\"index\"\n        class=\"command_item\">\n          <input type=\"text\" class=\"nes-input\"\n                 autocomplete=\"off\"\n                 v-model=\"command.name\">\n\n          <button type=\"button\" class=\"nes-btn is-error\" @click=\"removeCommand(index)\">X</button>\n          <br/>\n\n          <textarea class=\"nes-textarea\"\n                    v-model=\"command.content\"></textarea>\n\n        </div>\n      </div>\n\n      <br>\n      <div v-if=\"workingTopic.gameName || workingTopic.tags\">\n        <br>\n        Game: {{workingTopic.gameName}} <br />\n        <br>\n      </div>\n\n      <br/>\n      <button type=\"button\" class=\"nes-btn\"\n              :class=\"{'is-is-error': loggedIn, 'is-disabled': !loggedIn}\"\n              @click=\"importFromTwitch()\">Import from Twitch</button>\n\n    </div>\n    </div>\n  </scrolling-content>\n\n  <br/>\n\n  <button v-if=\"!!workingTopic.id\" type=\"button\" class=\"nes-btn is-error\"\n          @click=\"archiveTopic()\">Archive</button>\n\n  <button type=\"button\" class=\"nes-btn is-error\" @click=\"cancel()\">Cancel</button>\n  <button type=\"button\" class=\"nes-btn\" @click=\"save()\">Save</button>\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { TagData, Topic } from '@/types';\nimport { store } from '@/state';\nimport { twitch } from '@/twitch-instance';\nimport TagsInput from '@voerro/vue-tagsinput';\nimport { convertTwitchTagsToTagData, generateNotification, generateTitle } from '@/utils';\nimport ScrollingContent from '@/components/ScrollingContent.vue';\n\nexport default defineComponent({\n  components: {\n    ScrollingContent,\n    TagsInput\n  },\n  props: {\n    topic: {\n      type: Object as () => Topic,\n      required: true\n    },\n    loggedIn: {\n      type: Boolean\n    }\n  },\n  data () {\n    return {\n      workingTopic: { ...this.topic } as Topic,\n      counterPlaceholder: '{{counter}}',\n      currentTags: [] as TagData[],\n      state: store.state,\n      customChannel: !!this.topic?.customChannel\n    }\n  },\n  computed: {\n    allTags (): TagData[] {\n      const allTags = [...Object.values(this.state.tags)];\n\n      if (this.workingTopic?.importTags) {\n        allTags.push(...this.workingTopic.importTags);\n      }\n\n      return allTags;\n    },\n    generatedTitle (): string {\n      return generateTitle({\n        ...this.workingTopic\n      });\n    },\n    generatedNotification (): string {\n      return generateNotification({\n        ...this.workingTopic\n      });\n    },\n    isTemplateInvalid (): boolean {\n      return this.notValidTemplateExplanation !== '';\n    },\n    notValidTemplateExplanation (): string {\n      const template = this.workingTopic.template;\n\n      if (!template) {\n        return 'You need a template.';\n      }\n\n      const generatedTitle = generateTitle({\n        ...this.workingTopic,\n        currentCounter: 100\n      });\n\n      const titleLength = generatedTitle.length;\n\n      if (titleLength > 140) {\n        return `A generated topic can be only 140 characters long. (Using 100 as counter) - Current Length: ${titleLength}`;\n      }\n\n      return '';\n    },\n\n    isNotificationInvalid (): boolean {\n      return this.notValidNotificationExplanation !== '';\n    },\n    notValidNotificationExplanation (): string {\n      const template = this.workingTopic.notificationText;\n\n      if (!template) {\n        return 'You need a going live notification.';\n      }\n\n      const generatedTitle = generateTitle({\n        ...this.workingTopic,\n        currentCounter: 100\n      });\n\n      const titleLength = generatedTitle.length;\n\n      if (titleLength > 140) {\n        return `A generated notification can be only 140 characters long. (Using 100 as counter) - Current Length: ${titleLength}`;\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    cancel () {\n      this.$emit('cancel');\n    },\n    save () {\n      if (!this.workingTopic.title) {\n        return;\n      }\n\n      if (this.isTemplateInvalid) {\n        return;\n      }\n\n      this.$emit('save', this.workingTopic);\n    },\n    async importFromTwitch () {\n      const channelInfo = await twitch.currentChannelInformation();\n      const tags = await twitch.currentTags();\n\n      if (!this.workingTopic.template) {\n        this.workingTopic.template = channelInfo.title;\n      }\n\n      this.workingTopic.gameId = channelInfo.game_id;\n      this.workingTopic.gameName = channelInfo.game_name;\n\n      console.info({ channelInfo, tags });\n\n      const importedTags = convertTwitchTagsToTagData(tags);\n\n      console.info({ tags, importedTags });\n      this.workingTopic.importTags = importedTags;\n\n      this.currentTags = importedTags;\n    },\n    updateTagsFromTopic () {\n      // topic was changed\n      // set the current tags from the Topic\n      console.info({\n        topic: this.workingTopic,\n        state: JSON.stringify(this.state.tags) ?? 'no null value',\n        test: true\n      });\n\n      this.currentTags = this.workingTopic.tags\n        ?.split(',')\n        .map(id => this.state.tags[id])\n        .filter(t => !!t) ?? [];\n\n      this.updateTagsToTopic();\n    },\n    updateTags () {\n      const tagsValue = (this.$refs as any).tagsInput.tags;\n\n      this.currentTags = tagsValue;\n\n      console.info(this.$refs);\n      console.info('SHOULD BE UPDATED?!!?', this.currentTags);\n\n      this.updateTagsToTopic();\n    },\n    updateTagsToTopic () {\n      this.workingTopic.tags = this.currentTags.map(t => t.id).join(',');\n    },\n    addCommand () {\n      this.workingTopic.commands.push({\n        name: 'New Command',\n        content: ''\n      });\n    },\n    removeCommand (index: number) {\n      this.workingTopic.commands.splice(index, 1);\n    },\n    archiveTopic () {\n      this.workingTopic.archived = true;\n      this.save();\n    }\n  },\n  watch: {\n    topic (val) {\n      this.workingTopic = { ...val } as Topic;\n\n      this.updateTagsFromTopic();\n    }\n  },\n  mounted () {\n    this.updateTagsFromTopic();\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"~@voerro/vue-tagsinput/dist/style.css\";\n\n.topic-form-outer {\n  height: 75vh;\n  width: 100vw;\n  max-width: 1000px;\n}\n\n.column:nth-of-type(2) {\n  margin-left: 1rem;\n}\n\n.nes-field {\n  margin-bottom: 1rem;\n\n  .nes-text.is-error {\n    display: block;\n    margin-top: 1rem;\n    margin-left: 0.5rem;\n  }\n}\n\n.nes-textarea {\n  min-height: 10rem;\n}\n\n.command_item {\n  padding: 0.25rem;\n  margin-bottom: 1rem;\n\n  outline: 0.25rem dashed gray;\n\n  input {\n    display: inline-block;\n    width: calc(100% - 5rem);\n  }\n  .nes-btn {\n    margin-left: 1rem;\n  }\n  &:hover {\n    background: gray;\n    outline: none;\n  }\n}\n</style>\n\n<style lang=\"scss\" >\n\n.topic-form {\n  margin-right: 1rem;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .tags-input-root {\n    margin: 8px;\n\n    .tags-input {\n      border-radius: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .tags-input-badge {\n      margin-bottom: 0.5rem;\n    }\n  }\n}\n</style>\n","import {\n  Command,\n  COMMAND_SYNTAX_CONTENT,\n  COMMAND_SYNTAX_NAME,\n  CONFIG_COMMAND_SYNTAX,\n  CONFIG_STATE, TagData,\n  Topic, TwitchChannelTag\n} from '@/types';\n\nexport function generateTitle (topic: Topic) {\n  if (!topic || !topic.template) {\n    return '';\n  }\n\n  return topic.template.replace(/{{counter}}/g, `${topic.currentCounter}`);\n}\n\nexport function generateNotification (topic: Topic) {\n  if (!topic || !topic.notificationText) {\n    return '';\n  }\n\n  return topic.notificationText.replace(/{{counter}}/g, `${topic.currentCounter}`);\n}\n\nexport function generateCommandText (command: Command) {\n  const commandToSend = CONFIG_STATE[CONFIG_COMMAND_SYNTAX]\n    .replace(COMMAND_SYNTAX_NAME, command.name)\n    .replace(COMMAND_SYNTAX_CONTENT, command.content);\n\n  return commandToSend;\n}\n\nexport function convertTwitchTagsToTagData (tags: TwitchChannelTag[]) {\n  return tags\n    .filter((t) => !t.is_auto)\n    .map((t) => ({\n      id: t.tag_id,\n      name: t.localization_names['en-us']\n    }) as TagData);\n}\n","import {\n  ITwitchApiHandler,\n  Topic,\n  TwitchChannelInformation, TwitchChannelTag, TwitchLoginExistsPayload,\n  TwitchLoginPayload,\n  Command, TwitchPaginatedDataResult\n} from '@/types';\nimport { generateCommandText, generateTitle } from '@/utils';\nimport jwtDecode from 'jwt-decode';\nimport * as tmi from 'tmi.js';\n\nconst LS_USER_ID = 'userId';\nconst LS_USER_NAME = 'userName';\nconst LS_TOKEN_ID = 'tokenId';\nconst LS_ACCESS_TOKEN = 'accessToken';\n\n// TODO Extract multiple fetch with headers\n\nexport class TwitchApiHandler implements ITwitchApiHandler {\n  private twitchAuthUrl: string;\n  private tmi: tmi.Client | null = null;\n\n  constructor (private clientId: string,\n              private scopes: string,\n              private redirectUrl: string) {\n    this.twitchAuthUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token%20id_token&client_id=${this.clientId}&redirect_uri=${encodeURIComponent(this.redirectUrl)}&scope=${this.scopes}+openid`;\n  }\n\n  // todo type\n  async login (): Promise<TwitchLoginPayload> {\n    return new Promise((resolve, reject) => {\n      const userId = localStorage.getItem(LS_USER_ID) ?? '';\n\n      if (userId) {\n        const userName = localStorage.getItem(LS_USER_NAME) ?? '';\n        const tokenId = localStorage.getItem(LS_TOKEN_ID) ?? '';\n        const accessToken = localStorage.getItem(LS_ACCESS_TOKEN) ?? '';\n\n        resolve({\n          userId, userName, tokenId, accessToken\n        })\n      } else {\n        window.open(this.twitchAuthUrl, 'Twitch Auth', 'toolbar=0,scrollbars=1,status=1,resizable=1,location=1,menuBar=0');\n\n        console.info(this.twitchAuthUrl);\n\n        (window as any).gotToken = function (userName: string, userId: string, tokenId: string, accessToken: string) {\n          console.info({ userName, userId, tokenId, accessToken });\n          resolve({\n            userName, userId, tokenId, accessToken\n          });\n          localStorage.setItem(LS_USER_NAME, userName);\n          localStorage.setItem(LS_USER_ID, userId);\n          localStorage.setItem(LS_TOKEN_ID, tokenId);\n          localStorage.setItem(LS_ACCESS_TOKEN, accessToken);\n        };\n      }\n    });\n  }\n\n  async loginExists (): Promise<TwitchLoginExistsPayload | null> {\n    const accessToken = localStorage.getItem(LS_ACCESS_TOKEN);\n\n    if (!accessToken) {\n      return null;\n    }\n\n    return fetch('https://id.twitch.tv/oauth2/userinfo', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(res => res.json())\n      .then(js => {\n        console.info({ js });\n\n        return js;\n      });\n  }\n\n  checkTokens () {\n    console.info({ location });\n\n    const hashValues = location.hash.replace('#', '');\n\n    const params = new URLSearchParams(hashValues);\n\n    const tokenId = params.get('id_token');\n    const accessToken = params.get('access_token');\n\n    const jwt = jwtDecode(tokenId!);\n\n    console.info({ jwt });\n\n    const { preferred_username: userName, sub: userId } = jwt as any;\n\n    console.info({ userName, userId, tokenId, accessToken });\n\n    setTimeout(() => {\n      window.opener.gotToken(userName, userId, tokenId, accessToken);\n      window.close();\n    }, 4000);\n  }\n\n  // GET https://api.twitch.tv/helix/channels\n  currentChannelInformation (): Promise<TwitchChannelInformation> {\n    return fetch('https://api.twitch.tv/helix/channels?broadcaster_id=' + localStorage.getItem(LS_USER_ID), {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        'client-id': this.clientId\n      }\n    }).then(res => res.json())\n      .then(js => {\n        console.info({ js });\n\n        return js.data[0];\n      });\n  }\n\n  getChannelInfoByUserName (username: string): Promise<{\n    broadcaster_type: string;\n    created_at: string;\n    description: string;\n    display_name: string;\n    id: string;\n    login: string;\n    offline_image_url: string;\n    profile_image_url: string;\n    type: string;\n    view_count: number;\n  }> {\n    return fetch('https://api.twitch.tv/helix/users?login=' + username, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        'client-id': this.clientId\n      }\n    }).then(res => res.json())\n      .then(js => {\n        console.info({ js });\n\n        return js.data[0];\n      });\n  }\n\n  // GET https://api.twitch.tv/helix/streams/tags\n  currentTags (): Promise<TwitchChannelTag[]> {\n    return fetch('https://api.twitch.tv/helix/streams/tags?broadcaster_id=' + localStorage.getItem(LS_USER_ID), {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        'client-id': this.clientId\n      }\n    }).then(res => res.json())\n      .then(js => {\n        console.info({ js });\n\n        return js.data;\n      });\n  }\n\n  async applyTopicToTwitch (topic: Topic) {\n    let broadcaster_id = localStorage.getItem(LS_USER_ID);\n\n    const newTagsPayload = { tag_ids: topic.tags?.split(',').filter(t => t !== '') }\n\n    if (topic.customChannel) {\n      const result = await this.getChannelInfoByUserName(topic.customChannel);\n\n      console.info({ result });\n\n      broadcaster_id = result.id;\n    }\n\n    if (newTagsPayload.tag_ids.length !== 0) {\n      await fetch('https://api.twitch.tv/helix/streams/tags?broadcaster_id=' + broadcaster_id, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n          'client-id': this.clientId,\n          'content-type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify(newTagsPayload)\n      });\n\n      console.info('Sent Tags');\n    }\n\n    const channelInformationPayload = {\n      game_id: topic.gameId,\n      title: generateTitle(topic),\n      broadcaster_language: 'en'\n    };\n\n    await fetch('https://api.twitch.tv/helix/channels?broadcaster_id=' + broadcaster_id, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        'client-id': this.clientId,\n        'content-type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(channelInformationPayload)\n    });\n\n    console.info('Apply values to Twitch', {\n      broadcaster_id,\n      newTagsPayload,\n      channelInformationPayload\n    });\n  }\n\n  async writeToChat (command: Command): Promise<void> {\n    const userName = localStorage.getItem('userName') ?? '';\n\n    if (this.tmi === null) {\n      this.tmi = tmi.Client({\n        identity: {\n          username: userName,\n          password: `oauth:${localStorage.getItem('accessToken')}`\n        },\n        connection: {\n          secure: true,\n          reconnect: true\n        }\n      });\n      const result = await this.tmi.connect();\n      console.info({ result, userName });\n    }\n\n    await this.tmi.say(userName, generateCommandText(command));\n  }\n\n  async listFirstTags (\n    after?: string|undefined,\n    first = 100\n  ): Promise<TwitchPaginatedDataResult<TwitchChannelTag>> {\n    const result = await fetch(`https://api.twitch.tv/helix/tags/streams?first=${first}&after=${after || ''}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        'client-id': this.clientId,\n        'content-type': 'application/json'\n      },\n      method: 'GET'\n    }).then(res => res.json());\n\n    return result;\n  }\n\n  public resetAuth () {\n    localStorage.setItem(LS_USER_ID, '');\n    localStorage.setItem(LS_USER_NAME, '');\n    localStorage.setItem(LS_TOKEN_ID, '');\n    localStorage.setItem(LS_ACCESS_TOKEN, '');\n  }\n}\n","import {\n  Command,\n  ITwitchApiHandler,\n  Topic,\n  TwitchChannelInformation,\n  TwitchChannelTag, TwitchLoginExistsPayload,\n  TwitchLoginPayload, TwitchPaginatedDataResult\n} from '@/types';\nimport { generateCommandText } from '@/utils';\n\nexport class TwitchApiOfflineHandler implements ITwitchApiHandler {\n  async login (): Promise<TwitchLoginPayload> {\n    return {\n      accessToken: '',\n      tokenId: '',\n      userName: '',\n      userId: ''\n    };\n  }\n\n  async loginExists (): Promise<TwitchLoginExistsPayload | null> {\n    return {\n      preferred_username: 'offfline',\n      message: '',\n      status: 200\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  checkTokens (): void { }\n\n  // GET https://api.twitch.tv/helix/channels\n  async currentChannelInformation (): Promise<TwitchChannelInformation> {\n    return {\n      title: 'Stuff',\n      game_id: '1334',\n      game_name: 'Coding Stuff'\n    }\n  }\n\n  // GET https://api.twitch.tv/helix/streams/tags\n  async currentTags (): Promise<TwitchChannelTag[]> {\n    return [];\n  }\n\n  async applyTopicToTwitch (topic: Topic) {\n    alert('Stuff will be applied to Twitch');\n  }\n\n  async writeToChat (command: Command): Promise<void> {\n    alert('Writing to chat that!' + generateCommandText(command));\n  }\n\n  listFirstTags (\n    after?: string|undefined,\n    first?: number|undefined\n  ): Promise<TwitchPaginatedDataResult<TwitchChannelTag>> {\n    return Promise.reject(new Error('offline'));\n  }\n\n  resetAuth (): void {\n    alert();\n  }\n}\n","import { TwitchApiHandler } from '@/twitch-api.handler';\nimport { TwitchApiOfflineHandler } from '@/twitch-api.offline';\n\nconst currentUrl = `${location.href}`;\nconst scopes = 'user_read+user:edit:broadcast+chat:read+chat:edit';\nexport const clientId = 'mz7t3tiaptc51q5rvp5e86j51e61p5';\n\nexport const queryParams = new URLSearchParams(location.search);\n\nconsole.info({ queryParams });\n\nexport const twitch = queryParams.has('develop')\n  ? new TwitchApiOfflineHandler()\n  : new TwitchApiHandler(clientId, scopes, currentUrl);\n","<template>\n  <div ref=\"simplebar\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport SimpleBar from 'simplebar';\n\n@Options({\n  components: {\n\n  }\n})\nexport default class ScrollingContent extends Vue {\n  // annotate refs type.\n  // The symbol `!` (definite assignment assertion)\n  // is needed to get rid of compilation error.\n  declare $refs: {\n    simplebar: HTMLElement;\n  }\n\n  mounted () {\n    // eslint-disable-next-line no-new\n    new SimpleBar(this.$refs.simplebar, {\n      autoHide: false\n    });\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.simplebar-scrollbar::before {\n  background-color: white !important;\n}\n</style>\n","\nimport { Options, Vue } from 'vue-class-component'\nimport SimpleBar from 'simplebar';\n\n@Options({\n  components: {\n\n  }\n})\nexport default class ScrollingContent extends Vue {\n  // annotate refs type.\n  // The symbol `!` (definite assignment assertion)\n  // is needed to get rid of compilation error.\n  declare $refs: {\n    simplebar: HTMLElement;\n  }\n\n  mounted () {\n    // eslint-disable-next-line no-new\n    new SimpleBar(this.$refs.simplebar, {\n      autoHide: false\n    });\n  }\n}\n","import { render } from \"./ScrollingContent.vue?vue&type=template&id=56a80012\"\nimport script from \"./ScrollingContent.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollingContent.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollingContent.vue?vue&type=style&index=0&id=56a80012&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport { TagData, Topic } from '@/types';\nimport { store } from '@/state';\nimport { twitch } from '@/twitch-instance';\nimport TagsInput from '@voerro/vue-tagsinput';\nimport { convertTwitchTagsToTagData, generateNotification, generateTitle } from '@/utils';\nimport ScrollingContent from '@/components/ScrollingContent.vue';\n\nexport default defineComponent({\n  components: {\n    ScrollingContent,\n    TagsInput\n  },\n  props: {\n    topic: {\n      type: Object as () => Topic,\n      required: true\n    },\n    loggedIn: {\n      type: Boolean\n    }\n  },\n  data () {\n    return {\n      workingTopic: { ...this.topic } as Topic,\n      counterPlaceholder: '{{counter}}',\n      currentTags: [] as TagData[],\n      state: store.state,\n      customChannel: !!this.topic?.customChannel\n    }\n  },\n  computed: {\n    allTags (): TagData[] {\n      const allTags = [...Object.values(this.state.tags)];\n\n      if (this.workingTopic?.importTags) {\n        allTags.push(...this.workingTopic.importTags);\n      }\n\n      return allTags;\n    },\n    generatedTitle (): string {\n      return generateTitle({\n        ...this.workingTopic\n      });\n    },\n    generatedNotification (): string {\n      return generateNotification({\n        ...this.workingTopic\n      });\n    },\n    isTemplateInvalid (): boolean {\n      return this.notValidTemplateExplanation !== '';\n    },\n    notValidTemplateExplanation (): string {\n      const template = this.workingTopic.template;\n\n      if (!template) {\n        return 'You need a template.';\n      }\n\n      const generatedTitle = generateTitle({\n        ...this.workingTopic,\n        currentCounter: 100\n      });\n\n      const titleLength = generatedTitle.length;\n\n      if (titleLength > 140) {\n        return `A generated topic can be only 140 characters long. (Using 100 as counter) - Current Length: ${titleLength}`;\n      }\n\n      return '';\n    },\n\n    isNotificationInvalid (): boolean {\n      return this.notValidNotificationExplanation !== '';\n    },\n    notValidNotificationExplanation (): string {\n      const template = this.workingTopic.notificationText;\n\n      if (!template) {\n        return 'You need a going live notification.';\n      }\n\n      const generatedTitle = generateTitle({\n        ...this.workingTopic,\n        currentCounter: 100\n      });\n\n      const titleLength = generatedTitle.length;\n\n      if (titleLength > 140) {\n        return `A generated notification can be only 140 characters long. (Using 100 as counter) - Current Length: ${titleLength}`;\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    cancel () {\n      this.$emit('cancel');\n    },\n    save () {\n      if (!this.workingTopic.title) {\n        return;\n      }\n\n      if (this.isTemplateInvalid) {\n        return;\n      }\n\n      this.$emit('save', this.workingTopic);\n    },\n    async importFromTwitch () {\n      const channelInfo = await twitch.currentChannelInformation();\n      const tags = await twitch.currentTags();\n\n      if (!this.workingTopic.template) {\n        this.workingTopic.template = channelInfo.title;\n      }\n\n      this.workingTopic.gameId = channelInfo.game_id;\n      this.workingTopic.gameName = channelInfo.game_name;\n\n      console.info({ channelInfo, tags });\n\n      const importedTags = convertTwitchTagsToTagData(tags);\n\n      console.info({ tags, importedTags });\n      this.workingTopic.importTags = importedTags;\n\n      this.currentTags = importedTags;\n    },\n    updateTagsFromTopic () {\n      // topic was changed\n      // set the current tags from the Topic\n      console.info({\n        topic: this.workingTopic,\n        state: JSON.stringify(this.state.tags) ?? 'no null value',\n        test: true\n      });\n\n      this.currentTags = this.workingTopic.tags\n        ?.split(',')\n        .map(id => this.state.tags[id])\n        .filter(t => !!t) ?? [];\n\n      this.updateTagsToTopic();\n    },\n    updateTags () {\n      const tagsValue = (this.$refs as any).tagsInput.tags;\n\n      this.currentTags = tagsValue;\n\n      console.info(this.$refs);\n      console.info('SHOULD BE UPDATED?!!?', this.currentTags);\n\n      this.updateTagsToTopic();\n    },\n    updateTagsToTopic () {\n      this.workingTopic.tags = this.currentTags.map(t => t.id).join(',');\n    },\n    addCommand () {\n      this.workingTopic.commands.push({\n        name: 'New Command',\n        content: ''\n      });\n    },\n    removeCommand (index: number) {\n      this.workingTopic.commands.splice(index, 1);\n    },\n    archiveTopic () {\n      this.workingTopic.archived = true;\n      this.save();\n    }\n  },\n  watch: {\n    topic (val) {\n      this.workingTopic = { ...val } as Topic;\n\n      this.updateTagsFromTopic();\n    }\n  },\n  mounted () {\n    this.updateTagsFromTopic();\n  }\n})\n","import { render } from \"./TopicForm.vue?vue&type=template&id=c0c8e0ac&scoped=true\"\nimport script from \"./TopicForm.vue?vue&type=script&lang=ts\"\nexport * from \"./TopicForm.vue?vue&type=script&lang=ts\"\n\nimport \"./TopicForm.vue?vue&type=style&index=0&id=c0c8e0ac&lang=scss&scoped=true\"\nimport \"./TopicForm.vue?vue&type=style&index=1&id=c0c8e0ac&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-c0c8e0ac\"\n\nexport default script","<template>\n  <div class=\"panel-holder\">\n    <slot></slot>\n    <button type=\"button\" class=\"nes-btn is-error floating-close-button\" @click=\"cancel()\">X</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ClosablePanel',\n  methods: {\n    cancel () {\n      this.$emit('cancel');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.panel-holder {\n  position: relative;\n}\n\n.floating-close-button {\n  position: absolute;\n  top: -1rem;\n  right: -1rem;\n}\n</style>\n","import { render } from \"./ClosablePanel.vue?vue&type=template&id=203cd942&scoped=true\"\nimport script from \"./ClosablePanel.vue?vue&type=script&lang=js\"\nexport * from \"./ClosablePanel.vue?vue&type=script&lang=js\"\n\nimport \"./ClosablePanel.vue?vue&type=style&index=0&id=203cd942&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-203cd942\"\n\nexport default script","<template>\n  <h4> {{ topic.title }}  [{{topic.currentCounter}}]\n    <button type=\"button\" class=\"nes-btn is-warning\" @click=\"$emit('show-edit-form', topic)\">Edit</button>\n    <button type=\"button\" class=\"nes-btn is-error\" @click=\"$emit('delete-topic', topic)\">X</button>\n\n    <span v-if=\"topic.customChannel\"> @{{topic.customChannel}}</span>\n  </h4>\n  <h5>\n    <span class=\"nes-text is-warning\">{{ generateTitle(topic).slice(0, 32) }}</span>{{ generateTitle(topic).slice(32) }} <br/>\n  </h5>\n\n  <br>\n  Game: {{topic.gameName ?? 'Need to \"Import from Twitch\"'}} <br />\n  Tags:\n  <span v-if=\"topic.tags\">\n    <span class=\"nes-badge\"\n          v-for=\"tagName of topic.tags?.split(',').map(id => state.tags[id]?.name)\"\n          :key=\"tagName\"\n    >\n      <span class=\"is-primary\">{{tagName}}</span>\n    </span>\n  </span>\n  <span v-if=\"!topic.tags\">\n    Need to \"Import from Twitch\"\n  </span>\n\n  <br>\n  <br>\n\n  <span class=\"nes-text is-success\">{{ lastAppliedLabel }}</span> <br/>\n  <button type=\"button\" class=\"nes-btn is-warning\" @click=\"$emit('increase-counter', topic)\">Increase Counter</button>\n  <button type=\"button\"\n          class=\"nes-btn\"\n          :class=\"{'is-success': loggedIn, 'is-disabled': !loggedIn}\"\n          @click=\"$emit('setup-twitch', topic)\">Set Twitch Title & Tags</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { State, Topic } from '@/types';\nimport { generateTitle } from '@/utils';\nimport { store } from '@/state';\n\nexport default defineComponent({\n  props: {\n    topic: {\n      type: Object as () => Topic,\n      required: true\n    },\n    loggedIn: {\n      type: Boolean\n    }\n  },\n  data () {\n    return {\n      state: store.state as State\n    }\n  },\n  computed: {\n    lastAppliedLabel (): string {\n      const foundEntriesInHistory = this.state.history\n        .filter(h => h.topicId === this.topic.id);\n\n      if (foundEntriesInHistory.length > 0) {\n        foundEntriesInHistory.sort(function (a, b) {\n          if (!a.date || !b.date) {\n            return 0;\n          }\n\n          // Turn your strings into dates, and then subtract them\n          // to get a value that is either negative, positive, or zero.\n          return Number(new Date(b.date)) - Number(new Date(a.date));\n        });\n\n        const latestEntry = foundEntriesInHistory[0];\n\n        return `${new Date(latestEntry.date!).toLocaleString()} with the Title:  ${latestEntry.lastTitle}`;\n      }\n\n      console.info({ foundEntriesInHistory });\n\n      return '';\n    }\n  },\n  methods: {\n    generateTitle (topic: Topic) {\n      return generateTitle(topic);\n    }\n  }\n});\n</script>\n\n<style scoped>\n\n</style>\n","\nimport { defineComponent } from 'vue';\nimport { State, Topic } from '@/types';\nimport { generateTitle } from '@/utils';\nimport { store } from '@/state';\n\nexport default defineComponent({\n  props: {\n    topic: {\n      type: Object as () => Topic,\n      required: true\n    },\n    loggedIn: {\n      type: Boolean\n    }\n  },\n  data () {\n    return {\n      state: store.state as State\n    }\n  },\n  computed: {\n    lastAppliedLabel (): string {\n      const foundEntriesInHistory = this.state.history\n        .filter(h => h.topicId === this.topic.id);\n\n      if (foundEntriesInHistory.length > 0) {\n        foundEntriesInHistory.sort(function (a, b) {\n          if (!a.date || !b.date) {\n            return 0;\n          }\n\n          // Turn your strings into dates, and then subtract them\n          // to get a value that is either negative, positive, or zero.\n          return Number(new Date(b.date)) - Number(new Date(a.date));\n        });\n\n        const latestEntry = foundEntriesInHistory[0];\n\n        return `${new Date(latestEntry.date!).toLocaleString()} with the Title:  ${latestEntry.lastTitle}`;\n      }\n\n      console.info({ foundEntriesInHistory });\n\n      return '';\n    }\n  },\n  methods: {\n    generateTitle (topic: Topic) {\n      return generateTitle(topic);\n    }\n  }\n});\n","import { render } from \"./TopicEntry.vue?vue&type=template&id=19254a70&scoped=true\"\nimport script from \"./TopicEntry.vue?vue&type=script&lang=ts\"\nexport * from \"./TopicEntry.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-19254a70\"\n\nexport default script","<template>\n  <div v-for=\"(entry, index) of sortedHistory\" :key=\"entry.id\">\n    <hr v-if=\"index !== 0\">\n    <h4> {{ entry.task }}</h4>\n    {{new Date(entry.date).toLocaleString()}}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { store } from '../state';\nimport { HistoryEntry, State } from '../types';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  data () {\n    return {\n      state: store.state as State\n    }\n  },\n  computed: {\n    sortedHistory (): HistoryEntry[] {\n      const newArray = [...this.state.history];\n\n      newArray.sort((a, b) => {\n        const aDate = Date.parse(a.date!.toString());\n        const bDate = Date.parse(b.date!.toString());\n\n        if (aDate < bDate) {\n          return 1;\n        } else if (aDate > bDate) {\n          return -1\n        } else {\n          return 0\n        }\n      });\n\n      return newArray.slice(0, 7);\n    }\n  }\n});\n</script>\n\n<style scoped>\n\n</style>\n","\nimport { store } from '../state';\nimport { HistoryEntry, State } from '../types';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  data () {\n    return {\n      state: store.state as State\n    }\n  },\n  computed: {\n    sortedHistory (): HistoryEntry[] {\n      const newArray = [...this.state.history];\n\n      newArray.sort((a, b) => {\n        const aDate = Date.parse(a.date!.toString());\n        const bDate = Date.parse(b.date!.toString());\n\n        if (aDate < bDate) {\n          return 1;\n        } else if (aDate > bDate) {\n          return -1\n        } else {\n          return 0\n        }\n      });\n\n      return newArray.slice(0, 7);\n    }\n  }\n});\n","import { render } from \"./HistoryList.vue?vue&type=template&id=23929ce5&scoped=true\"\nimport script from \"./HistoryList.vue?vue&type=script&lang=ts\"\nexport * from \"./HistoryList.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-23929ce5\"\n\nexport default script","<template>\n  <div class=\"form-holder\">\n    <div class=\"nes-field\">\n      <label for=\"command_syntax\"> Command Syntax </label>\n      <input type=\"text\" id=\"command_syntax\" class=\"nes-input\"\n             autocomplete=\"off\"\n             v-model=\"commandSyntax\">\n\n      <div>\n        <i>You need to use <code>{name}</code> and <code>{content}</code> to replace your commands. </i>\n      </div>\n    </div>\n\n    <br />\n\n    <div v-if=\"currentlyImportingTags\">\n      #{{ importedTags }} Tags imported.\n    </div>\n\n    <button v-if=\"isLoggedIn && !currentlyImportingTags\" type=\"button\"\n            class=\"nes-btn\" @click=\"importTwitchTags()\">\n      Import all Twitch Tags\n    </button>\n\n    <br/>\n\n    <button type=\"button\" class=\"nes-btn is-error\" @click=\"cancel()\">Cancel</button>\n    <button type=\"button\" class=\"nes-btn\" @click=\"save()\">Save</button>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { store } from '../state';\nimport { CONFIG_COMMAND_SYNTAX, CONFIG_STATE, State, TwitchChannelTag, TwitchPaginatedDataResult } from '../types';\nimport { defineComponent } from 'vue';\nimport { twitch } from '@/twitch-instance';\nimport { convertTwitchTagsToTagData } from '@/utils';\n\nexport default defineComponent({\n  data () {\n    return {\n      state: store.state as State,\n      commandSyntax: '' as string,\n      importedTags: 0,\n      currentlyImportingTags: false\n    }\n  },\n  mounted () {\n    this.commandSyntax = CONFIG_STATE[CONFIG_COMMAND_SYNTAX];\n  },\n  computed: {\n    isLoggedIn: () => {\n      return store.state.loggedIn;\n    }\n  },\n  methods: {\n    cancel () {\n      this.$emit('cancel');\n    },\n    save () {\n      localStorage.setItem(CONFIG_COMMAND_SYNTAX, this.commandSyntax);\n      CONFIG_STATE[CONFIG_COMMAND_SYNTAX] = this.commandSyntax;\n\n      this.$emit('save');\n    },\n    async importTwitchTags () {\n      this.currentlyImportingTags = true;\n\n      let lastCursor = '';\n      let result: TwitchPaginatedDataResult<TwitchChannelTag>;\n\n      do {\n        result = await twitch.listFirstTags(lastCursor);\n\n        if (!result) {\n          break;\n        }\n\n        console.info({ result });\n\n        if (result.data.length) {\n          const importableTags = convertTwitchTagsToTagData(result.data);\n\n          const newTags = store.importUnknownTags(importableTags);\n\n          if (newTags === 0) {\n            break;\n          }\n        }\n\n        lastCursor = result.pagination.cursor;\n      } while (result.data.length !== 0);\n    }\n  }\n});\n</script>\n\n<style scoped>\n\n</style>\n","\nimport { store } from '../state';\nimport { CONFIG_COMMAND_SYNTAX, CONFIG_STATE, State, TwitchChannelTag, TwitchPaginatedDataResult } from '../types';\nimport { defineComponent } from 'vue';\nimport { twitch } from '@/twitch-instance';\nimport { convertTwitchTagsToTagData } from '@/utils';\n\nexport default defineComponent({\n  data () {\n    return {\n      state: store.state as State,\n      commandSyntax: '' as string,\n      importedTags: 0,\n      currentlyImportingTags: false\n    }\n  },\n  mounted () {\n    this.commandSyntax = CONFIG_STATE[CONFIG_COMMAND_SYNTAX];\n  },\n  computed: {\n    isLoggedIn: () => {\n      return store.state.loggedIn;\n    }\n  },\n  methods: {\n    cancel () {\n      this.$emit('cancel');\n    },\n    save () {\n      localStorage.setItem(CONFIG_COMMAND_SYNTAX, this.commandSyntax);\n      CONFIG_STATE[CONFIG_COMMAND_SYNTAX] = this.commandSyntax;\n\n      this.$emit('save');\n    },\n    async importTwitchTags () {\n      this.currentlyImportingTags = true;\n\n      let lastCursor = '';\n      let result: TwitchPaginatedDataResult<TwitchChannelTag>;\n\n      do {\n        result = await twitch.listFirstTags(lastCursor);\n\n        if (!result) {\n          break;\n        }\n\n        console.info({ result });\n\n        if (result.data.length) {\n          const importableTags = convertTwitchTagsToTagData(result.data);\n\n          const newTags = store.importUnknownTags(importableTags);\n\n          if (newTags === 0) {\n            break;\n          }\n        }\n\n        lastCursor = result.pagination.cursor;\n      } while (result.data.length !== 0);\n    }\n  }\n});\n","import { render } from \"./Options.vue?vue&type=template&id=d08106e8&scoped=true\"\nimport script from \"./Options.vue?vue&type=script&lang=ts\"\nexport * from \"./Options.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-d08106e8\"\n\nexport default script","<template>\n  <vue-final-modal v-model=\"isOpened\">\n    <div class=\"nes-dialog is-dark\" v-if=\"isOpened\">\n      <closable-panel @cancel=\"closeModal()\">\n        <slot></slot>\n      </closable-panel>\n    </div>\n  </vue-final-modal>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport { Prop } from 'vue-property-decorator';\nimport ClosablePanel from '@/components/ClosablePanel.vue';\n\n@Options({\n  components: {\n    ClosablePanel\n\n  },\n\n  watch: {\n    opened (newOpenedValue) {\n      this.isOpened = newOpenedValue;\n    }\n  }\n})\nexport default class Modal extends Vue {\n  @Prop({ default: false })\n  opened!: boolean;\n\n  public isOpened = this.opened;\n\n  closeModal () {\n    this.$emit('update:opened', false);\n    this.isOpened = false;\n    this.$emit('closed', true);\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","\nimport { Options, Vue } from 'vue-class-component'\nimport { Prop } from 'vue-property-decorator';\nimport ClosablePanel from '@/components/ClosablePanel.vue';\n\n@Options({\n  components: {\n    ClosablePanel\n\n  },\n\n  watch: {\n    opened (newOpenedValue) {\n      this.isOpened = newOpenedValue;\n    }\n  }\n})\nexport default class Modal extends Vue {\n  @Prop({ default: false })\n  opened!: boolean;\n\n  public isOpened = this.opened;\n\n  closeModal () {\n    this.$emit('update:opened', false);\n    this.isOpened = false;\n    this.$emit('closed', true);\n  }\n}\n","import { render } from \"./Modal.vue?vue&type=template&id=57ec674a&scoped=true\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-57ec674a\"\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component'\nimport { store } from '@/state';\nimport TopicForm from '@/components/TopicForm.vue';\nimport { reactive } from 'vue';\nimport ClosablePanel from '@/components/ClosablePanel.vue';\nimport { Topic } from '@/types';\nimport { generateTitle } from '@/utils';\nimport { twitch } from '@/twitch-instance';\nimport TopicEntry from '@/components/TopicEntry.vue';\nimport HistoryList from '@/components/HistoryList.vue';\nimport OptionsVue from '@/components/Options.vue';\nimport ScrollingContent from '@/components/ScrollingContent.vue';\nimport Modal from '@/components/Modal.vue';\n\n// TODO extract handler / instance\n\nfunction wait (ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const hashParams = new URLSearchParams(location.hash?.replace('#', ''));\n\n@Options({\n  components: {\n    Modal,\n    TopicForm,\n    ClosablePanel,\n    TopicEntry,\n    HistoryList,\n    Options: OptionsVue,\n    ScrollingContent\n  }\n})\nexport default class App extends Vue {\n  state = store.state;\n\n  startAnimate = false;\n\n  authRedirectMode = hashParams.has('id_token');\n\n  loggedIn = false;\n  userName = '';\n  showHistory = false;\n  showOptions = false;\n  showNewForm = false;\n  formForTopic?: Topic|null = reactive<any>(null);\n\n  async mounted () {\n    if (this.authRedirectMode) {\n      twitch.checkTokens();\n    }\n\n    const loginResult = await twitch.loginExists();\n\n    console.info({ loginResult });\n    if (loginResult) {\n      this.loggedIn = !!loginResult?.preferred_username;\n      if (!this.loggedIn) {\n        this.loggedIn = false;\n        twitch.resetAuth();\n        return;\n      }\n\n      this.userName = loginResult.preferred_username;\n    } else {\n      this.loggedIn = false;\n    }\n\n    store.setLoggedIn(this.loggedIn);\n  }\n\n  onAddNew (topic: Topic) {\n    store.addTopic(topic);\n\n    this.showNewForm = false;\n  }\n\n  deleteTopic (topic: Topic) {\n    if (window.confirm('Delete this topic?')) {\n      store.deleteTopic(topic);\n    }\n  }\n\n  showEditForm (topic: Topic) {\n    console.info({ topic });\n    this.formForTopic = topic;\n  }\n\n  editTopic (topic: Topic) {\n    console.info({ topic });\n    store.editTopic(topic);\n    this.formForTopic = null;\n  }\n\n  increaseCounter (topic: Topic) {\n    topic.currentCounter++;\n    store.editTopic(topic);\n\n    // push new title to twitch\n    console.info('Push title to Twitch: ', { ...topic });\n  }\n\n  async setupTwitch (topic: Topic) {\n    store.addHistoryEntry({\n      task: `Applied ${topic.title}: ${topic.currentCounter}`,\n      lastTitle: generateTitle(topic),\n      topicId: topic.id ?? -1,\n      lastCounter: topic.currentCounter\n    });\n\n    await twitch.applyTopicToTwitch(topic);\n\n    for (const command of topic.commands) {\n      await twitch.writeToChat(command);\n      await wait(1000);\n    }\n  }\n\n  async getToken () {\n    const { userId, userName } = await twitch.login();\n    if (userId) {\n      this.loggedIn = true;\n      this.userName = userName;\n    }\n  }\n\n  logout () {\n    twitch.resetAuth();\n    this.loggedIn = false;\n    this.userName = '';\n  }\n\n  unArchiveTopic (topic: Topic) {\n    topic.archived = false;\n    store.editTopic(topic);\n  }\n\n  get currentTopics () {\n    return this.state.topics.filter(t => !t.archived);\n  }\n\n  get archivedTopics () {\n    return this.state.topics.filter(t => t.archived);\n  }\n}\n","import { render } from \"./App.vue?vue&type=template&id=0ce41e7b\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0ce41e7b&lang=scss\"\nscript.render = render\n\nexport default script","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createApp } from 'vue'\n\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport VueFinalModal from 'vue-final-modal'\n\nimport 'simplebar/dist/simplebar.min.css';\n\ncreateApp(App)\n  .use(VueFinalModal())\n  .mount('#app')\n"],"sourceRoot":""}